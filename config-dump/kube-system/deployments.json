{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "47023"
    },
    "items": [
        {
            "metadata": {
                "name": "ama-logs-rs",
                "namespace": "kube-system",
                "uid": "3de96419-f2b9-42f8-a869-f7d3d03115e5",
                "resourceVersion": "10893",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:17:59Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "component": "ama-logs-agent",
                    "helm.toolkit.fluxcd.io/name": "azure-monitor-logs-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks",
                    "tier": "node"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "aks-managed-azure-monitor-logs",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "rsName": "ama-logs-rs"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "kubernetes.azure.com/managedby": "aks",
                            "rsName": "ama-logs-rs"
                        },
                        "annotations": {
                            "WSID": "YTZlMWJhOWUtMmIxYi00NWMxLWJlYmYtMzEzMDZjYzE2ZWMy",
                            "agentVersion": "azure-mdsd-1.35.1",
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "dockerProviderVersion": "18.0.1-0",
                            "kubernetes.azure.com/no-http-proxy-vars": "true",
                            "schema-versions": "v1"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "container-hostname",
                                "hostPath": {
                                    "path": "/etc/hostname",
                                    "type": ""
                                }
                            },
                            {
                                "name": "host-log",
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                }
                            },
                            {
                                "name": "azure-json-path",
                                "hostPath": {
                                    "path": "/etc/kubernetes",
                                    "type": ""
                                }
                            },
                            {
                                "name": "ama-logs-secret",
                                "secret": {
                                    "secretName": "ama-logs-secret",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "ama-logs-rs-config",
                                "configMap": {
                                    "name": "ama-logs-rs-config",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "settings-vol-config",
                                "configMap": {
                                    "name": "container-azm-ms-agentconfig",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "ama-logs-adx-secret",
                                "secret": {
                                    "secretName": "ama-logs-adx-secret",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "osm-settings-vol-config",
                                "configMap": {
                                    "name": "container-azm-ms-osmconfig",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "addon-token-adapter",
                                "image": "mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1",
                                "command": [
                                    "/addon-token-adapter"
                                ],
                                "args": [
                                    "--secret-namespace=kube-system",
                                    "--secret-name=aad-msi-auth-token",
                                    "--token-server-listening-port=8888",
                                    "--health-server-listening-port=9999",
                                    "--restart-pod-waiting-minutes-on-broken-connection=240"
                                ],
                                "env": [
                                    {
                                        "name": "AZMON_COLLECT_ENV",
                                        "value": "false"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9999,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "NET_RAW"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "ama-logs",
                                "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27",
                                "ports": [
                                    {
                                        "containerPort": 25225,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 25224,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "in-rs-tcp",
                                        "containerPort": 25227,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "AKS_CLUSTER_NAME",
                                        "value": "auto-aks"
                                    },
                                    {
                                        "name": "AKS_RESOURCE_ID",
                                        "value": "/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks"
                                    },
                                    {
                                        "name": "AKS_NODE_RESOURCE_GROUP",
                                        "value": "MC_arc-test-kv_auto-aks_westus3"
                                    },
                                    {
                                        "name": "AKS_REGION",
                                        "value": "westus3"
                                    },
                                    {
                                        "name": "CONTROLLER_TYPE",
                                        "value": "ReplicaSet"
                                    },
                                    {
                                        "name": "USER_ASSIGNED_IDENTITY_CLIENT_ID"
                                    },
                                    {
                                        "name": "NUM_OF_FLUENTD_WORKERS",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "ama-logs",
                                                "resource": "limits.cpu",
                                                "divisor": "0"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_MEMORY_LIMIT_IN_BYTES",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "ama-logs",
                                                "resource": "limits.memory",
                                                "divisor": "0"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOSTNAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SIDECAR_SCRAPING_ENABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "USING_AAD_MSI_AUTH",
                                        "value": "true"
                                    },
                                    {
                                        "name": "APPMONITORING_AUTOINSTRUMENTATION_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "APPMONITORING_OPENTELEMETRYLOGS_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "APPMONITORING_OPENTELEMETRYLOGS_PORT",
                                        "value": "28331"
                                    },
                                    {
                                        "name": "PROMETHEUS_METRICS_SCRAPING_DISABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AZMON_TELEGRAF_LIVENESSPROBE_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AZMON_WINDOWS_FLUENT_BIT_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CLUSTER_CLOUD_ENVIRONMENT",
                                        "value": "azurepubliccloud"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1536Mi"
                                    },
                                    "requests": {
                                        "cpu": "150m",
                                        "memory": "250Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "host-log",
                                        "mountPath": "/var/log"
                                    },
                                    {
                                        "name": "azure-json-path",
                                        "mountPath": "/etc/kubernetes/host"
                                    },
                                    {
                                        "name": "ama-logs-secret",
                                        "readOnly": true,
                                        "mountPath": "/etc/ama-logs-secret"
                                    },
                                    {
                                        "name": "ama-logs-secret",
                                        "readOnly": true,
                                        "mountPath": "/etc/omsagent-secret"
                                    },
                                    {
                                        "name": "ama-logs-rs-config",
                                        "mountPath": "/etc/config"
                                    },
                                    {
                                        "name": "settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings"
                                    },
                                    {
                                        "name": "ama-logs-adx-secret",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings/adx"
                                    },
                                    {
                                        "name": "osm-settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/osm-settings"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/livenessprobe.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 15,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "DAC_OVERRIDE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "ama-logs",
                        "serviceAccount": "ama-logs",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "weight": 1,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "storageprofile",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "managed"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:18:08Z",
                        "lastTransitionTime": "2025-07-24T16:18:08Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:18:08Z",
                        "lastTransitionTime": "2025-07-24T16:17:59Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"ama-logs-rs-78c75f6d75\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "ama-metrics",
                "namespace": "kube-system",
                "uid": "02655106-45be-407e-8950-364a76a475d6",
                "resourceVersion": "5634",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:17:28Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "component": "ama-metrics",
                    "helm.toolkit.fluxcd.io/name": "azure-monitor-metrics-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "aks-managed-azure-monitor-metrics",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "rsName": "ama-metrics"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "kubernetes.azure.com/managedby": "aks",
                            "rsName": "ama-metrics"
                        },
                        "annotations": {
                            "agentVersion": "0.0.0.1",
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "schema-versions": "v1"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "settings-vol-config",
                                "configMap": {
                                    "name": "ama-metrics-settings-configmap",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "prometheus-config-vol",
                                "configMap": {
                                    "name": "ama-metrics-prometheus-config",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "host-log-containers",
                                "hostPath": {
                                    "path": "/var/log/containers",
                                    "type": ""
                                }
                            },
                            {
                                "name": "host-log-pods",
                                "hostPath": {
                                    "path": "/var/log/pods",
                                    "type": ""
                                }
                            },
                            {
                                "name": "anchors-mariner",
                                "hostPath": {
                                    "path": "/etc/pki/ca-trust/source/anchors/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "ama-metrics-tls-secret-volume",
                                "secret": {
                                    "secretName": "ama-metrics-mtls-secret",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "anchors-ubuntu",
                                "hostPath": {
                                    "path": "/usr/local/share/ca-certificates/",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "prometheus-collector",
                                "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.18.0-main-06-19-2025-4901e151",
                                "env": [
                                    {
                                        "name": "CLUSTER",
                                        "value": "/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks"
                                    },
                                    {
                                        "name": "AKSREGION",
                                        "value": "westus3"
                                    },
                                    {
                                        "name": "MAC",
                                        "value": "true"
                                    },
                                    {
                                        "name": "AZMON_COLLECT_ENV",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AZMON_OPERATOR_ENABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "OPERATOR_TARGETS_HTTPS_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AZMON_COLLECTOR_HPA_ENABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "customEnvironment",
                                        "value": "azurepubliccloud"
                                    },
                                    {
                                        "name": "OMS_TLD",
                                        "value": "opinsights.azure.com"
                                    },
                                    {
                                        "name": "CONTROLLER_TYPE",
                                        "value": "ReplicaSet"
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_CPU_LIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "prometheus-collector",
                                                "resource": "limits.cpu",
                                                "divisor": "1m"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_MEMORY_LIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "prometheus-collector",
                                                "resource": "limits.memory",
                                                "divisor": "1Mi"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_STATE_NAME",
                                        "value": "ama-metrics-ksm"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_NAME"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_TARGETPORT",
                                        "value": "19100"
                                    },
                                    {
                                        "name": "KUBE_STATE_VERSION",
                                        "value": "v2.15.0-4"
                                    },
                                    {
                                        "name": "OPERATOR_TARGETS_TA_IMG_VERSION",
                                        "value": "6.18.0-main-06-19-2025-4901e151-targetallocator"
                                    },
                                    {
                                        "name": "OPERATOR_TARGETS_CFG_READER_IMG_VERSION",
                                        "value": "6.18.0-main-06-19-2025-4901e151-cfg"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_VERSION"
                                    },
                                    {
                                        "name": "AGENT_VERSION",
                                        "value": "6.18.0-main-06-19-2025-4901e151"
                                    },
                                    {
                                        "name": "MODE",
                                        "value": "advanced"
                                    },
                                    {
                                        "name": "WINMODE",
                                        "value": "advanced"
                                    },
                                    {
                                        "name": "MINIMAL_INGESTION_PROFILE",
                                        "value": "true"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "7",
                                        "memory": "14Gi"
                                    },
                                    "requests": {
                                        "cpu": "150m",
                                        "memory": "500Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings"
                                    },
                                    {
                                        "name": "ama-metrics-tls-secret-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/prometheus/certs"
                                    },
                                    {
                                        "name": "prometheus-config-vol",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings/prometheus"
                                    },
                                    {
                                        "name": "host-log-containers",
                                        "readOnly": true,
                                        "mountPath": "/var/log/containers"
                                    },
                                    {
                                        "name": "host-log-pods",
                                        "readOnly": true,
                                        "mountPath": "/var/log/pods"
                                    },
                                    {
                                        "name": "anchors-mariner",
                                        "readOnly": true,
                                        "mountPath": "/anchors/mariner"
                                    },
                                    {
                                        "name": "anchors-ubuntu",
                                        "readOnly": true,
                                        "mountPath": "/anchors/ubuntu"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "DAC_OVERRIDE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false
                                }
                            },
                            {
                                "name": "addon-token-adapter",
                                "image": "mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1",
                                "command": [
                                    "/addon-token-adapter"
                                ],
                                "args": [
                                    "--secret-namespace=kube-system",
                                    "--secret-name=aad-msi-auth-token",
                                    "--token-server-listening-port=7777",
                                    "--health-server-listening-port=9999",
                                    "--restart-pod-waiting-minutes-on-broken-connection=240"
                                ],
                                "env": [
                                    {
                                        "name": "AZMON_COLLECT_ENV",
                                        "value": "false"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "30Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9999,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "NET_RAW"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "ama-metrics-serviceaccount",
                        "serviceAccount": "ama-metrics-serviceaccount",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "weight": 50,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "azuremonitor/metrics.replica.preferred",
                                                    "operator": "In",
                                                    "values": [
                                                        "true"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical",
                        "topologySpreadConstraints": [
                            {
                                "maxSkew": 1,
                                "topologyKey": "kubernetes.io/hostname",
                                "whenUnsatisfiable": "ScheduleAnyway",
                                "labelSelector": {
                                    "matchLabels": {
                                        "rsName": "ama-metrics"
                                    }
                                }
                            },
                            {
                                "maxSkew": 1,
                                "topologyKey": "topology.kubernetes.io/zone",
                                "whenUnsatisfiable": "ScheduleAnyway",
                                "labelSelector": {
                                    "matchLabels": {
                                        "rsName": "ama-metrics"
                                    }
                                }
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:17:44Z",
                        "lastTransitionTime": "2025-07-24T16:17:44Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:17:44Z",
                        "lastTransitionTime": "2025-07-24T16:17:28Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"ama-metrics-74cfd5c6c4\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "ama-metrics-ksm",
                "namespace": "kube-system",
                "uid": "3ccb220f-7bdf-4d0b-8e68-d906cef3f53f",
                "resourceVersion": "5613",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:17:28Z",
                "labels": {
                    "app.kubernetes.io/component": "ama-metrics",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ama-metrics-ksm",
                    "app.kubernetes.io/part-of": "ama-metrics-ksm",
                    "app.kubernetes.io/version": "2.15.0-4",
                    "helm.sh/chart": "azure-monitor-metrics-addon-0.1.0",
                    "helm.toolkit.fluxcd.io/name": "azure-monitor-metrics-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "aks-managed-azure-monitor-metrics",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "ama-metrics-ksm"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "ama-metrics",
                            "app.kubernetes.io/name": "ama-metrics-ksm",
                            "app.kubernetes.io/part-of": "ama-metrics-ksm",
                            "app.kubernetes.io/version": "2.15.0-4",
                            "helm.sh/chart": "azure-monitor-metrics-addon-0.1.0",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "ama-metrics-ksm",
                                "image": "mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:v2.15.0-4",
                                "args": [
                                    "--port=8080",
                                    "--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments",
                                    "--telemetry-port=8081"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AZMON_COLLECT_ENV",
                                        "value": "false"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "5Gi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "50Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "ama-metrics-ksm",
                        "serviceAccount": "ama-metrics-ksm",
                        "securityContext": {
                            "runAsUser": 65534,
                            "runAsGroup": 65534,
                            "fsGroup": 65534
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:17:44Z",
                        "lastTransitionTime": "2025-07-24T16:17:44Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:17:44Z",
                        "lastTransitionTime": "2025-07-24T16:17:28Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"ama-metrics-ksm-bcfdd7489\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "ama-metrics-operator-targets",
                "namespace": "kube-system",
                "uid": "9bbb53ed-3efe-4a31-a499-79c1eae4c649",
                "resourceVersion": "6397",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:17:28Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "component": "ama-metrics-operator-targets",
                    "helm.toolkit.fluxcd.io/name": "azure-monitor-metrics-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "aks-managed-azure-monitor-metrics",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "kubernetes.azure.com/managedby": "aks",
                        "rsName": "ama-metrics-operator-targets"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "kubernetes.azure.com/managedby": "aks",
                            "rsName": "ama-metrics-operator-targets"
                        },
                        "annotations": {
                            "agentVersion": "0.0.0.1",
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "schema-versions": "v1"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "settings-vol-config",
                                "configMap": {
                                    "name": "ama-metrics-settings-configmap",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "prometheus-config-vol",
                                "configMap": {
                                    "name": "ama-metrics-prometheus-config",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "ama-metrics-tls-secret-volume",
                                "secret": {
                                    "secretName": "ama-metrics-mtls-secret",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "ta-config-shared",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "targetallocator",
                                "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.18.0-main-06-19-2025-4901e151-targetallocator",
                                "args": [
                                    "--enable-prometheus-cr-watcher"
                                ],
                                "ports": [
                                    {
                                        "name": "health-ta",
                                        "containerPort": 8081,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "OTELCOL_NAMESPACE",
                                        "value": "kube-system"
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CLUSTER",
                                        "value": "/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks"
                                    },
                                    {
                                        "name": "PROMETHEUS_OPERATOR_V1_CUSTOM_GROUP",
                                        "value": "azmonitoring.coreos.com"
                                    },
                                    {
                                        "name": "AGENT_VERSION",
                                        "value": "6.18.0-main-06-19-2025-4901e151-targetallocator"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "5",
                                        "memory": "8Gi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "ta-config-shared",
                                        "mountPath": "/conf"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health-ta",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "config-reader",
                                "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.18.0-main-06-19-2025-4901e151-cfg",
                                "ports": [
                                    {
                                        "name": "health",
                                        "containerPort": 8081,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "CLUSTER",
                                        "value": "/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks"
                                    },
                                    {
                                        "name": "AKSREGION",
                                        "value": "westus3"
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "value": "kube-system"
                                    },
                                    {
                                        "name": "CONTAINER_TYPE",
                                        "value": "ConfigReaderSidecar"
                                    },
                                    {
                                        "name": "MODE",
                                        "value": "advanced"
                                    },
                                    {
                                        "name": "MAC",
                                        "value": "true"
                                    },
                                    {
                                        "name": "AZMON_COLLECT_ENV",
                                        "value": "false"
                                    },
                                    {
                                        "name": "KUBE_STATE_NAME",
                                        "value": "ama-metrics-ksm"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_NAME"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_TARGETPORT",
                                        "value": "19100"
                                    },
                                    {
                                        "name": "customEnvironment",
                                        "value": "azurepubliccloud"
                                    },
                                    {
                                        "name": "WINMODE"
                                    },
                                    {
                                        "name": "MINIMAL_INGESTION_PROFILE",
                                        "value": "true"
                                    },
                                    {
                                        "name": "AGENT_VERSION",
                                        "value": "6.18.0-main-06-19-2025-4901e151-cfg"
                                    },
                                    {
                                        "name": "OPERATOR_TARGETS_HTTPS_ENABLED",
                                        "value": "false"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "1m",
                                        "memory": "10Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings"
                                    },
                                    {
                                        "name": "ama-metrics-tls-secret-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/prometheus/certs"
                                    },
                                    {
                                        "name": "prometheus-config-vol",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings/prometheus"
                                    },
                                    {
                                        "name": "ta-config-shared",
                                        "mountPath": "/ta-configuration"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 100,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "ama-metrics-serviceaccount",
                        "serviceAccount": "ama-metrics-serviceaccount",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "weight": 50,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "azuremonitor/metrics.replica.preferred",
                                                    "operator": "In",
                                                    "values": [
                                                        "true"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:17:48Z",
                        "lastTransitionTime": "2025-07-24T16:17:48Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:17:48Z",
                        "lastTransitionTime": "2025-07-24T16:17:28Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"ama-metrics-operator-targets-65458d648b\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "azure-policy",
                "namespace": "kube-system",
                "uid": "ce92961b-89c6-4200-9557-45f4b2b9feaa",
                "resourceVersion": "2508",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:26Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "azure-policy",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"azure-policy\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"azure-policy\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"replicas\":1,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"app\":\"azure-policy\"}},\"template\":{\"metadata\":{\"annotations\":{\"aks.component/sig\":\"azure-policy\",\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\"},\"labels\":{\"app\":\"azure-policy\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"azure-policy\"},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"azure-policy\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100}]}},\"containers\":[{\"env\":[{\"name\":\"K8S_POLICY_PREFIX\",\"value\":\"azurepolicy\"},{\"name\":\"RESOURCE_ID\",\"value\":\"/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks\"},{\"name\":\"RESOURCE_TYPE\",\"value\":\"Microsoft.ContainerService/managedClusters\"},{\"name\":\"DATAPLANE_ENDPOINT\",\"value\":\"https://data.policy.core.windows.net\"},{\"name\":\"ACS_CREDENTIAL_LOCATION\",\"value\":\"/etc/acs/azure.json\"},{\"name\":\"REFRESH_INTERVAL\",\"value\":\"15m\"},{\"name\":\"AUDIT_INTERVAL\",\"value\":\"15m\"},{\"name\":\"TELEMETRY_HEARTBEAT_INTERVAL\",\"value\":\"15m\"},{\"name\":\"MUTATION_ENABLED\",\"value\":\"true\"},{\"name\":\"EVALUATE_EXPANDED_RESOURCES_BY_DEFAULT\",\"value\":\"false\"},{\"name\":\"USER_ASSIGNED_IDENTITY\",\"value\":\"b2e1bb17-9cce-4f96-a824-2e7a3f6c4863\"},{\"name\":\"CURRENT_IMAGE\",\"value\":\"mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.3\"},{\"name\":\"FULL_SCAN_EXCLUSION_LIST\",\"value\":\"kube-system,gatekeeper-system,app-routing-system\"},{\"name\":\"WEBHOOK_EXCLUSION_LIST\",\"value\":\"kube-system,gatekeeper-system,app-routing-system\"},{\"name\":\"GATEKEEPER_NAMESPACE\",\"value\":\"gatekeeper-system\"},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"DATA_BOUNDARY\",\"value\":\"Global\"}],\"image\":\"mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.3\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":9090},\"initialDelaySeconds\":5},\"name\":\"azure-policy\",\"ports\":[{\"containerPort\":9090,\"name\":\"healthz\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":9090},\"initialDelaySeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"30m\",\"memory\":\"50Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsUser\":0,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"volumeMounts\":[{\"mountPath\":\"/etc/acs/azure.json\",\"name\":\"acs-credential\",\"readOnly\":true},{\"mountPath\":\"/etc/ssl/certs\",\"name\":\"ca-certs\",\"readOnly\":true},{\"mountPath\":\"/etc/pki/ca-trust/extracted\",\"name\":\"etc-pki-ca-certs\",\"readOnly\":true}]}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"azure-policy\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/etc/kubernetes/azure.json\",\"type\":\"File\"},\"name\":\"acs-credential\"},{\"hostPath\":{\"path\":\"/etc/ssl/certs\",\"type\":\"Directory\"},\"name\":\"ca-certs\"},{\"hostPath\":{\"path\":\"/etc/pki/ca-trust/extracted\",\"type\":\"DirectoryOrCreate\"},\"name\":\"etc-pki-ca-certs\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "azure-policy"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "azure-policy",
                        "creationTimestamp": null,
                        "labels": {
                            "app": "azure-policy",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "aks.component/sig": "azure-policy",
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "acs-credential",
                                "hostPath": {
                                    "path": "/etc/kubernetes/azure.json",
                                    "type": "File"
                                }
                            },
                            {
                                "name": "ca-certs",
                                "hostPath": {
                                    "path": "/etc/ssl/certs",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "etc-pki-ca-certs",
                                "hostPath": {
                                    "path": "/etc/pki/ca-trust/extracted",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "azure-policy",
                                "image": "mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.3",
                                "ports": [
                                    {
                                        "name": "healthz",
                                        "containerPort": 9090,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "K8S_POLICY_PREFIX",
                                        "value": "azurepolicy"
                                    },
                                    {
                                        "name": "RESOURCE_ID",
                                        "value": "/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks"
                                    },
                                    {
                                        "name": "RESOURCE_TYPE",
                                        "value": "Microsoft.ContainerService/managedClusters"
                                    },
                                    {
                                        "name": "DATAPLANE_ENDPOINT",
                                        "value": "https://data.policy.core.windows.net"
                                    },
                                    {
                                        "name": "ACS_CREDENTIAL_LOCATION",
                                        "value": "/etc/acs/azure.json"
                                    },
                                    {
                                        "name": "REFRESH_INTERVAL",
                                        "value": "15m"
                                    },
                                    {
                                        "name": "AUDIT_INTERVAL",
                                        "value": "15m"
                                    },
                                    {
                                        "name": "TELEMETRY_HEARTBEAT_INTERVAL",
                                        "value": "15m"
                                    },
                                    {
                                        "name": "MUTATION_ENABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "EVALUATE_EXPANDED_RESOURCES_BY_DEFAULT",
                                        "value": "false"
                                    },
                                    {
                                        "name": "USER_ASSIGNED_IDENTITY",
                                        "value": "b2e1bb17-9cce-4f96-a824-2e7a3f6c4863"
                                    },
                                    {
                                        "name": "CURRENT_IMAGE",
                                        "value": "mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.3"
                                    },
                                    {
                                        "name": "FULL_SCAN_EXCLUSION_LIST",
                                        "value": "kube-system,gatekeeper-system,app-routing-system"
                                    },
                                    {
                                        "name": "WEBHOOK_EXCLUSION_LIST",
                                        "value": "kube-system,gatekeeper-system,app-routing-system"
                                    },
                                    {
                                        "name": "GATEKEEPER_NAMESPACE",
                                        "value": "gatekeeper-system"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DATA_BOUNDARY",
                                        "value": "Global"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    },
                                    "requests": {
                                        "cpu": "30m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "acs-credential",
                                        "readOnly": true,
                                        "mountPath": "/etc/acs/azure.json"
                                    },
                                    {
                                        "name": "ca-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/ssl/certs"
                                    },
                                    {
                                        "name": "etc-pki-ca-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/pki/ca-trust/extracted"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9090,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 9090,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 0,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "azure-policy",
                        "serviceAccount": "azure-policy",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "azure-policy"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:48Z",
                        "lastTransitionTime": "2025-07-24T16:13:48Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:48Z",
                        "lastTransitionTime": "2025-07-24T16:11:26Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"azure-policy-c75c9b5dc\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "azure-policy-webhook",
                "namespace": "kube-system",
                "uid": "f8787585-1efc-48ce-8e5e-c59518d38ce2",
                "resourceVersion": "2261",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:26Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "azure-policy-webhook",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"azure-policy-webhook\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"azure-policy-webhook\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"replicas\":1,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"app\":\"azure-policy-webhook\"}},\"template\":{\"metadata\":{\"annotations\":{\"aks.component/sig\":\"azure-policy\",\"checksum/ca-cert\":\"caa1808eab746e4bc5666fac578804bb43e8c84000973922474c0bc431811b25\",\"checksum/tls-cert\":\"a9dc16a7a3875d174c1af4f923f261cafc124357f2322493a59ee0d14fcd10db\",\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\"},\"labels\":{\"app\":\"azure-policy-webhook\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"azure-policy-webhook\"},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"azure-policy-webhook\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100}]}},\"containers\":[{\"args\":[\"--port=9449\",\"--generate-certs=false\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"WEBHOOK_SYNC_POLICIES_ALLOWED_USERNAMES\",\"value\":\"aksService,aksDeploymentSafeguards\"}],\"image\":\"mcr.microsoft.com/azure-policy/policy-kubernetes-webhook:1.12.3\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":9090}},\"name\":\"azure-policy-webhook\",\"ports\":[{\"containerPort\":9090,\"name\":\"healthz\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readyz\",\"port\":9090}},\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"30m\",\"memory\":\"50Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsGroup\":999,\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}}}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"azure-policy-webhook-account\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "azure-policy-webhook"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "azure-policy-webhook",
                        "creationTimestamp": null,
                        "labels": {
                            "app": "azure-policy-webhook",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "aks.component/sig": "azure-policy",
                            "checksum/ca-cert": "caa1808eab746e4bc5666fac578804bb43e8c84000973922474c0bc431811b25",
                            "checksum/tls-cert": "a9dc16a7a3875d174c1af4f923f261cafc124357f2322493a59ee0d14fcd10db",
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "azure-policy-webhook",
                                "image": "mcr.microsoft.com/azure-policy/policy-kubernetes-webhook:1.12.3",
                                "args": [
                                    "--port=9449",
                                    "--generate-certs=false"
                                ],
                                "ports": [
                                    {
                                        "name": "healthz",
                                        "containerPort": 9090,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "WEBHOOK_SYNC_POLICIES_ALLOWED_USERNAMES",
                                        "value": "aksService,aksDeploymentSafeguards"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    },
                                    "requests": {
                                        "cpu": "30m",
                                        "memory": "50Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9090,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 9090,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 1000,
                                    "runAsGroup": 999,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "azure-policy-webhook-account",
                        "serviceAccount": "azure-policy-webhook-account",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "azure-policy-webhook"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:36Z",
                        "lastTransitionTime": "2025-07-24T16:13:36Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:36Z",
                        "lastTransitionTime": "2025-07-24T16:11:26Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"azure-policy-webhook-66c7cb55b6\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "azure-wi-webhook-controller-manager",
                "namespace": "kube-system",
                "uid": "20142022-26ae-4e25-9aba-968df3c26469",
                "resourceVersion": "2388",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:12:56Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "azure-workload-identity.io/system": "true",
                    "helm.toolkit.fluxcd.io/name": "workload-identity-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "aks-managed-workload-identity",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "azure-workload-identity.io/system": "true",
                        "kubernetes.azure.com/managedby": "aks"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "azure-workload-identity.io/system": "true",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cert",
                                "secret": {
                                    "secretName": "azure-wi-webhook-server-cert",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "manager",
                                "image": "mcr.microsoft.com/oss/azure/workload-identity/webhook:v1.5.1",
                                "command": [
                                    "/manager"
                                ],
                                "args": [
                                    "-log-level=info",
                                    "-disable-cert-rotation=true",
                                    "-webhook-cert-dir=/certs"
                                ],
                                "ports": [
                                    {
                                        "name": "webhook-server",
                                        "containerPort": 9443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "healthz",
                                        "containerPort": 9440,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "AZURE_ENVIRONMENT",
                                        "value": "AZUREPUBLICCLOUD"
                                    },
                                    {
                                        "name": "AZURE_TENANT_ID",
                                        "value": "510e02cd-c7e9-483c-b591-9047eb387e61"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cert",
                                        "readOnly": true,
                                        "mountPath": "/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "failureThreshold": 6
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65532,
                                    "runAsGroup": 65532,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "azure-wi-webhook-admin",
                        "serviceAccount": "azure-wi-webhook-admin",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:42Z",
                        "lastTransitionTime": "2025-07-24T16:13:42Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:42Z",
                        "lastTransitionTime": "2025-07-24T16:12:56Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"azure-wi-webhook-controller-manager-98c8578d\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "cilium-operator",
                "namespace": "kube-system",
                "uid": "633bce04-da58-4c47-b946-7995be87438d",
                "resourceVersion": "1933",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:13:12Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "helm.toolkit.fluxcd.io/name": "cilium-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "io.cilium/app": "operator",
                    "kubernetes.azure.com/managedby": "aks",
                    "name": "cilium-operator"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "io.cilium/app": "operator",
                        "name": "cilium-operator"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "io.cilium/app": "operator",
                            "kubernetes.azure.com/ebpf-dataplane": "cilium",
                            "kubernetes.azure.com/managedby": "aks",
                            "name": "cilium-operator"
                        },
                        "annotations": {
                            "cilium.io/cilium-configmap-checksum": "7c5c6a405d82e85d37c51b81a8035e874cc61519678af145b16fe3c42f10520d",
                            "prometheus.io/port": "9963",
                            "prometheus.io/scrape": "true"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cilium-config-path",
                                "configMap": {
                                    "name": "cilium-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "cilium-operator",
                                "image": "mcr.microsoft.com/containernetworking/cilium/operator-generic:v1.17.4-250610",
                                "command": [
                                    "cilium-operator-generic"
                                ],
                                "args": [
                                    "--config-dir=/tmp/cilium/config-map",
                                    "--debug=$(CILIUM_DEBUG)",
                                    "--enable-cilium-endpoint-slice=true",
                                    "--ces-slice-mode=fcfs"
                                ],
                                "ports": [
                                    {
                                        "name": "prometheus",
                                        "hostPort": 9963,
                                        "containerPort": 9963,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "K8S_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_K8S_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_DEBUG",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "cilium-config",
                                                "key": "debug",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cilium-config-path",
                                        "readOnly": true,
                                        "mountPath": "/tmp/cilium/config-map"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9234,
                                        "host": "127.0.0.1",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 3,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9234,
                                        "host": "127.0.0.1",
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 3,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "CHOWN",
                                            "KILL",
                                            "NET_ADMIN",
                                            "NET_RAW",
                                            "IPC_LOCK",
                                            "SYS_MODULE",
                                            "SYS_ADMIN",
                                            "SYS_RESOURCE",
                                            "DAC_OVERRIDE",
                                            "FOWNER",
                                            "SETGID",
                                            "SETUID"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "type": "spc_t",
                                        "level": "s0"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "cilium-operator",
                        "serviceAccount": "cilium-operator",
                        "automountServiceAccountToken": true,
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/ebpf-dataplane",
                                                    "operator": "In",
                                                    "values": [
                                                        "cilium"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "labelSelector": {
                                            "matchLabels": {
                                                "io.cilium/app": "operator"
                                            }
                                        },
                                        "topologyKey": "kubernetes.io/hostname"
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:15Z",
                        "lastTransitionTime": "2025-07-24T16:13:15Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:16Z",
                        "lastTransitionTime": "2025-07-24T16:13:12Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"cilium-operator-7c77d94f49\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "0216b8c0-93bd-4fc9-8760-078e8bfcf26c",
                "resourceVersion": "2539",
                "generation": 2,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS",
                    "version": "v20"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\",\"version\":\"v20\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\",\"version\":\"v20\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\"},\"labels\":{\"k8s-app\":\"kube-dns\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v20\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"env\":[{\"name\":\"GOMAXPROCS\",\"valueFrom\":{\"resourceFieldRef\":{\"resource\":\"limits.cpu\"}}}],\"image\":\"mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.11.3-8\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8181,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"cpu\":3,\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"procMount\":\"Default\",\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/etc/coredns/custom\",\"name\":\"custom-config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"},{\"configMap\":{\"name\":\"coredns-custom\",\"optional\":true},\"name\":\"custom-config-volume\"},{\"emptyDir\":{},\"name\":\"tmp\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "version": "v20"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "kubernetes.azure.com/managedby": "aks",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v20"
                        },
                        "annotations": {
                            "prometheus.io/port": "9153"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "custom-config-volume",
                                "configMap": {
                                    "name": "coredns-custom",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.11.3-8",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "GOMAXPROCS",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "resource": "limits.cpu",
                                                "divisor": "0"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "3",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "custom-config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns/custom"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "procMount": "Default"
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:45Z",
                        "lastTransitionTime": "2025-07-24T16:13:45Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:50Z",
                        "lastTransitionTime": "2025-07-24T16:11:24Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-55d67f68d9\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "coredns-autoscaler",
                "namespace": "kube-system",
                "uid": "65930d02-7c03-4be7-911e-8347fe9242cb",
                "resourceVersion": "2181",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "coredns-autoscaler",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"coredns-autoscaler\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"coredns-autoscaler\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"coredns-autoscaler\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\",\"seccomp.security.alpha.kubernetes.io/pod\":\"runtime/default\"},\"labels\":{\"k8s-app\":\"coredns-autoscaler\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]}]}}},\"containers\":[{\"command\":[\"/cluster-proportional-autoscaler\",\"--namespace=kube-system\",\"--configmap=coredns-autoscaler\",\"--target=deployment/coredns\",\"--default-params={\\\"ladder\\\":{\\\"coresToReplicas\\\":[[1,2],[512,3],[1024,4],[2048,5]],\\\"nodesToReplicas\\\":[[1,2],[8,3],[16,4],[32,5]]}}\",\"--logtostderr=true\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/last-poll\",\"port\":8080},\"initialDelaySeconds\":10,\"periodSeconds\":10},\"name\":\"autoscaler\",\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"1G\"},\"requests\":{\"cpu\":\"20m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"coredns-autoscaler\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "coredns-autoscaler"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "coredns-autoscaler",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "autoscaler",
                                "image": "mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-1",
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=coredns-autoscaler",
                                    "--target=deployment/coredns",
                                    "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "1G"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/last-poll",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns-autoscaler",
                        "serviceAccount": "coredns-autoscaler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:34Z",
                        "lastTransitionTime": "2025-07-24T16:13:34Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:34Z",
                        "lastTransitionTime": "2025-07-24T16:11:24Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-autoscaler-57c7bcd8d4\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "eraser-controller-manager",
                "namespace": "kube-system",
                "uid": "724e195c-bf25-4e0a-ae3a-4351a82d9722",
                "resourceVersion": "2559",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:13:09Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "image-cleaner",
                    "control-plane": "controller-manager",
                    "helm.toolkit.fluxcd.io/name": "image-cleaner-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "aks-managed-image-cleaner",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/name": "image-cleaner",
                        "control-plane": "controller-manager"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "image-cleaner",
                            "control-plane": "controller-manager",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "manager-config",
                                "configMap": {
                                    "name": "eraser-manager-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "manager",
                                "image": "mcr.microsoft.com/oss/eraser/eraser-manager:v1.3.1",
                                "command": [
                                    "/manager"
                                ],
                                "args": [
                                    "--config=/config/controller_manager_config.yaml"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OTEL_SERVICE_NAME",
                                        "value": "eraser-manager"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "600Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "30Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "manager-config",
                                        "mountPath": "/config"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65532,
                                    "runAsGroup": 65532,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 10,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "eraser-controller-manager",
                        "serviceAccount": "eraser-controller-manager",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:52Z",
                        "lastTransitionTime": "2025-07-24T16:13:52Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:52Z",
                        "lastTransitionTime": "2025-07-24T16:13:09Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"eraser-controller-manager-67b6b4f999\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "keda-admission-webhooks",
                "namespace": "kube-system",
                "uid": "6057e2aa-bf8b-40a8-a5cb-a32bf2677416",
                "resourceVersion": "2916",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:13:03Z",
                "labels": {
                    "app": "keda-admission-webhooks",
                    "app.kubernetes.io/component": "operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "keda-admission-webhooks",
                    "app.kubernetes.io/part-of": "keda-operator",
                    "app.kubernetes.io/version": "2.16.1",
                    "helm.toolkit.fluxcd.io/name": "keda-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks",
                    "name": "keda-admission-webhooks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "aks-managed-keda",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "keda-admission-webhooks"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "keda-admission-webhooks",
                            "app.kubernetes.io/component": "operator",
                            "app.kubernetes.io/name": "keda-admission-webhooks",
                            "app.kubernetes.io/part-of": "keda-operator",
                            "app.kubernetes.io/version": "2.16.1",
                            "azure.workload.identity/use": "true",
                            "helm.sh/chart": "keda-2.16.1",
                            "kubernetes.azure.com/managedby": "aks",
                            "name": "keda-admission-webhooks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "certificates",
                                "secret": {
                                    "secretName": "kedaorg-certs",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "keda-admission-webhooks",
                                "image": "mcr.microsoft.com/oss/v2/kedacore/keda-admission-webhooks:v2.16.1",
                                "command": [
                                    "/keda-admission-webhooks"
                                ],
                                "args": [
                                    "--zap-log-level=info",
                                    "--zap-encoder=console",
                                    "--zap-time-encoding=rfc3339",
                                    "--cert-dir=/certs",
                                    "--health-probe-bind-address=:8081",
                                    "--metrics-bind-address=:8080",
                                    "--kube-api-burst=30",
                                    "--kube-api-qps=20"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 9443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "WATCH_NAMESPACE"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "50m",
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "10Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "certificates",
                                        "readOnly": true,
                                        "mountPath": "/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 25,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "keda-webhook",
                        "serviceAccount": "keda-webhook",
                        "automountServiceAccountToken": true,
                        "securityContext": {
                            "runAsUser": 1000,
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "fsGroup": 1000
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:14:17Z",
                        "lastTransitionTime": "2025-07-24T16:14:17Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:14:17Z",
                        "lastTransitionTime": "2025-07-24T16:13:03Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"keda-admission-webhooks-6567cd546b\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "keda-operator",
                "namespace": "kube-system",
                "uid": "a3bf4b26-73a4-421f-959a-5808a9f10844",
                "resourceVersion": "2870",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:13:03Z",
                "labels": {
                    "app": "keda-operator",
                    "app.kubernetes.io/component": "operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "keda-operator",
                    "app.kubernetes.io/part-of": "keda-operator",
                    "app.kubernetes.io/version": "2.16.1",
                    "helm.toolkit.fluxcd.io/name": "keda-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks",
                    "name": "keda-operator"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "aks-managed-keda",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "keda-operator"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "keda-operator",
                            "app.kubernetes.io/component": "operator",
                            "app.kubernetes.io/name": "keda-operator",
                            "app.kubernetes.io/part-of": "keda-operator",
                            "app.kubernetes.io/version": "2.16.1",
                            "azure.workload.identity/use": "true",
                            "kubernetes.azure.com/managedby": "aks",
                            "name": "keda-operator"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "certificates",
                                "secret": {
                                    "secretName": "kedaorg-certs",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "keda-operator",
                                "image": "mcr.microsoft.com/oss/v2/kedacore/keda:v2.16.1",
                                "command": [
                                    "/keda"
                                ],
                                "args": [
                                    "--leader-elect",
                                    "--disable-compression=true",
                                    "--zap-log-level=info",
                                    "--zap-encoder=console",
                                    "--zap-time-encoding=rfc3339",
                                    "--cert-dir=/certs",
                                    "--enable-cert-rotation=true",
                                    "--cert-secret-name=kedaorg-certs",
                                    "--operator-service-name=keda-operator",
                                    "--metrics-server-service-name=keda-operator-metrics-apiserver",
                                    "--webhooks-service-name=keda-admission-webhooks",
                                    "--k8s-cluster-name=kubernetes-default",
                                    "--k8s-cluster-domain=cluster.local",
                                    "--enable-prometheus-metrics=true",
                                    "--metrics-bind-address=:8080",
                                    "--kube-api-burst=30",
                                    "--kube-api-qps=20"
                                ],
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metricsservice",
                                        "containerPort": 9666,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "WATCH_NAMESPACE"
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_NAME",
                                        "value": "keda-operator"
                                    },
                                    {
                                        "name": "KEDA_HTTP_DEFAULT_TIMEOUT",
                                        "value": "3000"
                                    },
                                    {
                                        "name": "KEDA_HTTP_MIN_TLS_VERSION",
                                        "value": "TLS12"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1000Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "certificates",
                                        "readOnly": true,
                                        "mountPath": "/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 25,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "keda-operator",
                        "serviceAccount": "keda-operator",
                        "automountServiceAccountToken": true,
                        "securityContext": {
                            "runAsUser": 1000,
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "fsGroup": 1000
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:14:13Z",
                        "lastTransitionTime": "2025-07-24T16:14:13Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:14:13Z",
                        "lastTransitionTime": "2025-07-24T16:13:03Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"keda-operator-75487c9cb7\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "keda-operator-metrics-apiserver",
                "namespace": "kube-system",
                "uid": "af5b55a4-7148-4233-b0a3-907a557367f5",
                "resourceVersion": "2776",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:13:03Z",
                "labels": {
                    "app": "keda-operator-metrics-apiserver",
                    "app.kubernetes.io/component": "operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "keda-operator-metrics-apiserver",
                    "app.kubernetes.io/part-of": "keda-operator",
                    "app.kubernetes.io/version": "2.16.1",
                    "helm.toolkit.fluxcd.io/name": "keda-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "aks-managed-keda",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "keda-operator-metrics-apiserver"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "keda-operator-metrics-apiserver",
                            "app.kubernetes.io/component": "operator",
                            "app.kubernetes.io/name": "keda-operator-metrics-apiserver",
                            "app.kubernetes.io/part-of": "keda-operator",
                            "app.kubernetes.io/version": "2.16.1",
                            "azure.workload.identity/use": "true",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "certificates",
                                "secret": {
                                    "secretName": "kedaorg-certs",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "keda-operator-metrics-apiserver",
                                "image": "mcr.microsoft.com/oss/v2/kedacore/keda-metrics-apiserver:v2.16.1",
                                "command": [
                                    "/keda-adapter"
                                ],
                                "args": [
                                    "--port=8080",
                                    "--secure-port=6443",
                                    "--logtostderr=true",
                                    "--stderrthreshold=ERROR",
                                    "--disable-compression=true",
                                    "--metrics-service-address=keda-operator.kube-system.svc.cluster.local:9666",
                                    "--client-ca-file=/certs/ca.crt",
                                    "--tls-cert-file=/certs/tls.crt",
                                    "--tls-private-key-file=/certs/tls.key",
                                    "--cert-dir=/certs",
                                    "--v=0",
                                    "--kube-api-burst=30",
                                    "--kube-api-qps=20"
                                ],
                                "ports": [
                                    {
                                        "name": "https",
                                        "containerPort": 6443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "WATCH_NAMESPACE"
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KEDA_HTTP_DEFAULT_TIMEOUT",
                                        "value": "3000"
                                    },
                                    {
                                        "name": "KEDA_HTTP_MIN_TLS_VERSION",
                                        "value": "TLS12"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1000Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "certificates",
                                        "readOnly": true,
                                        "mountPath": "/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 6443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 6443,
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "keda-metrics-server",
                        "serviceAccount": "keda-metrics-server",
                        "automountServiceAccountToken": true,
                        "securityContext": {
                            "runAsUser": 1000,
                            "runAsGroup": 1000,
                            "runAsNonRoot": true,
                            "fsGroup": 1000
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:14:02Z",
                        "lastTransitionTime": "2025-07-24T16:14:02Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:14:02Z",
                        "lastTransitionTime": "2025-07-24T16:13:03Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"keda-operator-metrics-apiserver-6b7c5864b9\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent",
                "namespace": "kube-system",
                "uid": "f9e05923-e1ba-4968-94a0-5a5991838d1e",
                "resourceVersion": "23381",
                "generation": 3,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "konnectivity-agent",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"konnectivity-agent\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"konnectivity-agent\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"app\":\"konnectivity-agent\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":0,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"checksum/client-cert\":\"e9b287dadcdbb178c7fedd7d7877bd81c9361a3d6edc956710cec89400589d44\"},\"labels\":{\"app\":\"konnectivity-agent\",\"component\":\"tunnel\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"konnectivity-agent\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"konnectivity-agent\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"--proxy-server-host=10.226.0.4\",\"--proxy-server-port=443\",\"--health-server-port=8082\",\"--keepalive-time=30s\",\"--agent-key=/certs/client.key\",\"--agent-cert=/certs/client.crt\",\"--ca-cert=/certs/ca.crt\",\"--agent-identifiers=default-route=true\",\"--alpn-proto=konnectivity\",\"-v=2\"],\"command\":[\"/proxy-agent\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8082,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"periodSeconds\":60,\"timeoutSeconds\":60},\"name\":\"konnectivity-agent\",\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8082,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"20m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}},\"volumeMounts\":[{\"mountPath\":\"/certs\",\"name\":\"certs\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"konnectivity-agent\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"name\":\"certs\",\"secret\":{\"secretName\":\"konnectivity-certs\"}}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "konnectivity-agent"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "konnectivity-agent",
                            "component": "tunnel",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "checksum/client-cert": "e9b287dadcdbb178c7fedd7d7877bd81c9361a3d6edc956710cec89400589d44",
                            "checksum/service-account-key": "f51f0b50a9b66ca6741285bd9b7fc512651a9cebed51d4193aa47aa49bc2dff6"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "certs",
                                "secret": {
                                    "secretName": "konnectivity-certs",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "konnectivity-agent",
                                "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819",
                                "command": [
                                    "/proxy-agent"
                                ],
                                "args": [
                                    "--proxy-server-host=10.226.0.4",
                                    "--proxy-server-port=443",
                                    "--health-server-port=8082",
                                    "--keepalive-time=30s",
                                    "--agent-key=/certs/client.key",
                                    "--agent-cert=/certs/client.crt",
                                    "--ca-cert=/certs/ca.crt",
                                    "--agent-identifiers=default-route=true",
                                    "--alpn-proto=konnectivity",
                                    "-v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "certs",
                                        "mountPath": "/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 60,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "konnectivity-agent",
                        "serviceAccount": "konnectivity-agent",
                        "automountServiceAccountToken": false,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 3,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:35Z",
                        "lastTransitionTime": "2025-07-24T16:13:35Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:19:11Z",
                        "lastTransitionTime": "2025-07-24T16:11:24Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"konnectivity-agent-695897ff6c\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent-autoscaler",
                "namespace": "kube-system",
                "uid": "736e8ff7-9912-4925-8192-642d8c4fdf6e",
                "resourceVersion": "2205",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "konnectivity-agent-autoscaler",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"konnectivity-agent-autoscaler\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"konnectivity-agent-autoscaler\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"replicas\":1,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"app\":\"konnectivity-agent-autoscaler\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\",\"seccomp.security.alpha.kubernetes.io/pod\":\"runtime/default\"},\"labels\":{\"app\":\"konnectivity-agent-autoscaler\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]}]}}},\"containers\":[{\"command\":[\"/cluster-proportional-autoscaler\",\"--namespace=kube-system\",\"--configmap=konnectivity-agent-autoscaler\",\"--target=deployment/konnectivity-agent\",\"--logtostderr=true\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/last-poll\",\"port\":8080},\"initialDelaySeconds\":10,\"periodSeconds\":10},\"name\":\"autoscaler\",\"resources\":{\"limits\":{\"cpu\":\"350m\",\"memory\":\"512M\"},\"requests\":{\"cpu\":\"20m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"konnectivity-agent-autoscaler\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "konnectivity-agent-autoscaler"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "konnectivity-agent-autoscaler",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "autoscaler",
                                "image": "mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.9.0-1",
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=konnectivity-agent-autoscaler",
                                    "--target=deployment/konnectivity-agent",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "350m",
                                        "memory": "512M"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/last-poll",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "konnectivity-agent-autoscaler",
                        "serviceAccount": "konnectivity-agent-autoscaler",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:35Z",
                        "lastTransitionTime": "2025-07-24T16:13:35Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:35Z",
                        "lastTransitionTime": "2025-07-24T16:11:24Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"konnectivity-agent-autoscaler-b456457b\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "uid": "beb13fbc-fd49-4cc2-a0d6-c83c4a6e7a42",
                "resourceVersion": "3122",
                "generation": 2,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metrics-server\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"replicas\":2,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"metrics-server\"},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"metrics-server\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"metrics-server\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"command\":[\"/pod_nanny\",\"--config-dir=/etc/config\",\"--cpu=150m\",\"--extra-cpu=0.5m\",\"--memory=100Mi\",\"--extra-memory=4Mi\",\"--poll-period=180000\",\"--threshold=5\",\"--deployment=metrics-server\",\"--container=metrics-server\"],\"env\":[{\"name\":\"MY_POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"MY_POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"metrics-server-vpa\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"300Mi\"},\"requests\":{\"cpu\":\"5m\",\"memory\":\"30Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":65532},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"metrics-server-config-volume\"}]},{\"command\":[\"/metrics-server\",\"--kubelet-insecure-tls\",\"--kubelet-preferred-address-types=InternalIP\",\"--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",\"--cert-dir=/tmp\",\"--secure-port=4443\"],\"image\":\"mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.7.2-7\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":\"ms-https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":20,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":10},\"name\":\"metrics-server\",\"ports\":[{\"containerPort\":4443,\"name\":\"ms-https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/readyz\",\"port\":\"ms-https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":60,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":10},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":65532},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-dir\"}]}],\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"metrics-server\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-dir\"},{\"configMap\":{\"name\":\"metrics-server-config\",\"optional\":true},\"name\":\"metrics-server-config-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            },
                            {
                                "name": "metrics-server-config-volume",
                                "configMap": {
                                    "name": "metrics-server-config",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server-vpa",
                                "image": "mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2",
                                "command": [
                                    "/pod_nanny",
                                    "--config-dir=/etc/config",
                                    "--cpu=150m",
                                    "--extra-cpu=0.5m",
                                    "--memory=100Mi",
                                    "--extra-memory=4Mi",
                                    "--poll-period=180000",
                                    "--threshold=5",
                                    "--deployment=metrics-server",
                                    "--container=metrics-server"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MY_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "30Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "metrics-server-config-volume",
                                        "mountPath": "/etc/config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65532,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            },
                            {
                                "name": "metrics-server",
                                "image": "mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.7.2-7",
                                "command": [
                                    "/metrics-server",
                                    "--kubelet-insecure-tls",
                                    "--kubelet-preferred-address-types=InternalIP",
                                    "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443"
                                ],
                                "ports": [
                                    {
                                        "name": "ms-https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "152m",
                                        "memory": "112Mi"
                                    },
                                    "requests": {
                                        "cpu": "152m",
                                        "memory": "112Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65532,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:14:39Z",
                        "lastTransitionTime": "2025-07-24T16:14:39Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:14:43Z",
                        "lastTransitionTime": "2025-07-24T16:11:24Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"metrics-server-65cf49c7\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "vpa-admission-controller",
                "namespace": "kube-system",
                "uid": "1d85005e-2cd1-49ad-96f6-16e4b2388c46",
                "resourceVersion": "2718",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:13:53Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "helm.toolkit.fluxcd.io/name": "overlay-vpa-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "overlay-vpa",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "vpa-admission-controller"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "vpa-admission-controller",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tls-certs",
                                "secret": {
                                    "secretName": "vpa-tls-certs",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "admission-controller",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/vpa-admission-controller:1.2.1",
                                "command": [
                                    "/admission-controller",
                                    "--register-webhook=false",
                                    "--min-tls-version=tls1_3"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8000,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "prometheus",
                                        "containerPort": 8944,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "1000Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "200Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tls-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/tls-certs"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "vpa-admission-controller",
                        "serviceAccount": "vpa-admission-controller",
                        "securityContext": {
                            "runAsUser": 65534,
                            "runAsNonRoot": true
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:56Z",
                        "lastTransitionTime": "2025-07-24T16:13:56Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:56Z",
                        "lastTransitionTime": "2025-07-24T16:13:53Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"vpa-admission-controller-65b5899fc\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "vpa-recommender",
                "namespace": "kube-system",
                "uid": "f8642dd5-dd12-4e05-830b-b25dd3bb38b8",
                "resourceVersion": "2700",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:13:53Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "helm.toolkit.fluxcd.io/name": "overlay-vpa-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "overlay-vpa",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "vpa-recommender"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "vpa-recommender",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "recommender",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/vpa-recommender:1.2.1",
                                "command": [
                                    "/recommender",
                                    "--pod-recommendation-min-cpu-millicores=1",
                                    "--pod-recommendation-min-memory-mb=5",
                                    "--memory-saver=true"
                                ],
                                "ports": [
                                    {
                                        "name": "prometheus",
                                        "containerPort": 8942,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "1000Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "500Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "vpa-recommender",
                        "serviceAccount": "vpa-recommender",
                        "securityContext": {
                            "runAsUser": 65534,
                            "runAsNonRoot": true
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:55Z",
                        "lastTransitionTime": "2025-07-24T16:13:55Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:55Z",
                        "lastTransitionTime": "2025-07-24T16:13:53Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"vpa-recommender-7b59697445\" has successfully progressed."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "vpa-updater",
                "namespace": "kube-system",
                "uid": "ab3b11e9-188d-4f89-9f85-bf2a2e4d3d91",
                "resourceVersion": "2739",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:13:53Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "helm.toolkit.fluxcd.io/name": "overlay-vpa-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "overlay-vpa",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "vpa-updater"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "vpa-updater",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "updater",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/vpa-updater:1.2.1",
                                "ports": [
                                    {
                                        "name": "prometheus",
                                        "containerPort": 8943,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "1000Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "500Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "vpa-updater",
                        "serviceAccount": "vpa-updater",
                        "securityContext": {
                            "runAsUser": 65534,
                            "runAsNonRoot": true
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:58Z",
                        "lastTransitionTime": "2025-07-24T16:13:58Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-07-24T16:13:58Z",
                        "lastTransitionTime": "2025-07-24T16:13:53Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"vpa-updater-6df668b9b\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
