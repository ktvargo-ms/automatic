{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "47018"
    },
    "items": [
        {
            "metadata": {
                "name": "aks-secrets-store-csi-driver",
                "namespace": "kube-system",
                "uid": "5a4754d9-09ca-4699-a41c-b34dd34df017",
                "resourceVersion": "2365",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "secrets-store-csi-driver",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"secrets-store-csi-driver\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"aks-secrets-store-csi-driver\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"secrets-store-csi-driver\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"secrets-store-csi-driver\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"args\":[\"--v=2\",\"--csi-address=/csi/csi.sock\",\"--kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"exec\":{\"command\":[\"/csi-node-driver-registrar\",\"--kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock\",\"--mode=kubelet-registration-probe\"]},\"initialDelaySeconds\":30,\"timeoutSeconds\":15},\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"plugin-dir\"},{\"mountPath\":\"/registration\",\"name\":\"registration-dir\"}]},{\"args\":[\"-v=2\",\"--log-format-json=false\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--provider-volume=/var/run/secrets-store-csi-providers\",\"--additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers\",\"--enable-secret-rotation=true\",\"--rotation-poll-interval=2m\",\"--metrics-addr=:8095\",\"--max-call-recv-msg-size=4194304\"],\"env\":[{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///csi/csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"},\"initialDelaySeconds\":30,\"periodSeconds\":15,\"timeoutSeconds\":10},\"name\":\"secrets-store\",\"ports\":[{\"containerPort\":9808,\"name\":\"healthz\",\"protocol\":\"TCP\"},{\"containerPort\":8095,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"100Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"plugin-dir\"},{\"mountPath\":\"/var/lib/kubelet/pods\",\"mountPropagation\":\"Bidirectional\",\"name\":\"mountpoint-dir\"},{\"mountPath\":\"/var/run/secrets-store-csi-providers\",\"name\":\"providers-dir\"},{\"mountPath\":\"/etc/kubernetes/secrets-store-csi-providers\",\"name\":\"providers-dir-0\"}]},{\"args\":[\"--csi-address=/csi/csi.sock\",\"--probe-timeout=3s\",\"--http-endpoint=0.0.0.0:9808\",\"-v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"liveness-probe\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"plugin-dir\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"aks-secrets-store-csi-driver\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet/pods\",\"type\":\"DirectoryOrCreate\"},\"name\":\"mountpoint-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins_registry/\",\"type\":\"Directory\"},\"name\":\"registration-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins/csi-secrets-store/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"plugin-dir\"},{\"hostPath\":{\"path\":\"/var/run/secrets-store-csi-providers\",\"type\":\"DirectoryOrCreate\"},\"name\":\"providers-dir\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/secrets-store-csi-providers\",\"type\":\"DirectoryOrCreate\"},\"name\":\"providers-dir-0\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "secrets-store-csi-driver"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "secrets-store-csi-driver",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "mountpoint-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/pods",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "registration-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins_registry/",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "plugin-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins/csi-secrets-store/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "providers-dir",
                                "hostPath": {
                                    "path": "/var/run/secrets-store-csi-providers",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "providers-dir-0",
                                "hostPath": {
                                    "path": "/etc/kubernetes/secrets-store-csi-providers",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1",
                                "args": [
                                    "--v=2",
                                    "--csi-address=/csi/csi.sock",
                                    "--kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock"
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "plugin-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "registration-dir",
                                        "mountPath": "/registration"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/csi-node-driver-registrar",
                                            "--kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock",
                                            "--mode=kubelet-registration-probe"
                                        ]
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 15,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "secrets-store",
                                "image": "mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0",
                                "args": [
                                    "-v=2",
                                    "--log-format-json=false",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--provider-volume=/var/run/secrets-store-csi-providers",
                                    "--additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers",
                                    "--enable-secret-rotation=true",
                                    "--rotation-poll-interval=2m",
                                    "--metrics-addr=:8095",
                                    "--max-call-recv-msg-size=4194304"
                                ],
                                "ports": [
                                    {
                                        "name": "healthz",
                                        "containerPort": 9808,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 8095,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix:///csi/csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "100Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "plugin-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "mountpoint-dir",
                                        "mountPath": "/var/lib/kubelet/pods",
                                        "mountPropagation": "Bidirectional"
                                    },
                                    {
                                        "name": "providers-dir",
                                        "mountPath": "/var/run/secrets-store-csi-providers"
                                    },
                                    {
                                        "name": "providers-dir-0",
                                        "mountPath": "/etc/kubernetes/secrets-store-csi-providers"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            },
                            {
                                "name": "liveness-probe",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1",
                                "args": [
                                    "--csi-address=/csi/csi.sock",
                                    "--probe-timeout=3s",
                                    "--http-endpoint=0.0.0.0:9808",
                                    "-v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "plugin-dir",
                                        "mountPath": "/csi"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "aks-secrets-store-csi-driver",
                        "serviceAccount": "aks-secrets-store-csi-driver",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "aks-secrets-store-csi-driver-windows",
                "namespace": "kube-system",
                "uid": "868ea0f0-04ff-4a00-998c-a240da1df37f",
                "resourceVersion": "640",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "secrets-store-csi-driver",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"secrets-store-csi-driver\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"aks-secrets-store-csi-driver-windows\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"secrets-store-csi-driver\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"secrets-store-csi-driver\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"args\":[\"--v=2\",\"--csi-address=unix://C:\\\\csi\\\\csi.sock\",\"--kubelet-registration-path=C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\csi-secrets-store\\\\csi.sock\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"exec\":{\"command\":[\"/csi-node-driver-registrar.exe\",\"--kubelet-registration-path=C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\csi-secrets-store\\\\\\\\csi.sock\",\"--mode=kubelet-registration-probe\"]},\"initialDelaySeconds\":30,\"timeoutSeconds\":15},\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"mountPath\":\"C:\\\\csi\",\"name\":\"plugin-dir\"},{\"mountPath\":\"C:\\\\registration\",\"name\":\"registration-dir\"}]},{\"args\":[\"-v=2\",\"--log-format-json=false\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--provider-volume=C:\\\\k\\\\secrets-store-csi-providers\",\"--enable-secret-rotation=true\",\"--rotation-poll-interval=2m\",\"--metrics-addr=:8095\",\"--max-call-recv-msg-size=4194304\"],\"env\":[{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\csi\\\\\\\\csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"},\"initialDelaySeconds\":30,\"periodSeconds\":15,\"timeoutSeconds\":10},\"name\":\"secrets-store\",\"ports\":[{\"containerPort\":9808,\"name\":\"healthz\",\"protocol\":\"TCP\"},{\"containerPort\":8095,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"400m\",\"memory\":\"400Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"mountPath\":\"C:\\\\csi\",\"name\":\"plugin-dir\"},{\"mountPath\":\"C:\\\\var\\\\lib\\\\kubelet\\\\pods\",\"name\":\"mountpoint-dir\"},{\"mountPath\":\"C:\\\\k\\\\secrets-store-csi-providers\",\"name\":\"providers-dir\"}]},{\"args\":[\"--csi-address=unix://C:\\\\csi\\\\csi.sock\",\"--probe-timeout=3s\",\"--http-endpoint=0.0.0.0:9808\",\"-v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"liveness-probe\",\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"mountPath\":\"C:\\\\csi\",\"name\":\"plugin-dir\"}]}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"aks-secrets-store-csi-driver\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"C:\\\\var\\\\lib\\\\kubelet\\\\pods\\\\\",\"type\":\"DirectoryOrCreate\"},\"name\":\"mountpoint-dir\"},{\"hostPath\":{\"path\":\"C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\\",\"type\":\"Directory\"},\"name\":\"registration-dir\"},{\"hostPath\":{\"path\":\"C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\csi-secrets-store\\\\\",\"type\":\"DirectoryOrCreate\"},\"name\":\"plugin-dir\"},{\"hostPath\":{\"path\":\"C:\\\\k\\\\secrets-store-csi-providers\",\"type\":\"DirectoryOrCreate\"},\"name\":\"providers-dir\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "secrets-store-csi-driver"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "secrets-store-csi-driver",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "mountpoint-dir",
                                "hostPath": {
                                    "path": "C:\\var\\lib\\kubelet\\pods\\",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "registration-dir",
                                "hostPath": {
                                    "path": "C:\\var\\lib\\kubelet\\plugins_registry\\",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "plugin-dir",
                                "hostPath": {
                                    "path": "C:\\var\\lib\\kubelet\\plugins\\csi-secrets-store\\",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "providers-dir",
                                "hostPath": {
                                    "path": "C:\\k\\secrets-store-csi-providers",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1",
                                "args": [
                                    "--v=2",
                                    "--csi-address=unix://C:\\csi\\csi.sock",
                                    "--kubelet-registration-path=C:\\var\\lib\\kubelet\\plugins\\csi-secrets-store\\csi.sock"
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "200Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "plugin-dir",
                                        "mountPath": "C:\\csi"
                                    },
                                    {
                                        "name": "registration-dir",
                                        "mountPath": "C:\\registration"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/csi-node-driver-registrar.exe",
                                            "--kubelet-registration-path=C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\csi-secrets-store\\\\csi.sock",
                                            "--mode=kubelet-registration-probe"
                                        ]
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 15,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "secrets-store",
                                "image": "mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0",
                                "args": [
                                    "-v=2",
                                    "--log-format-json=false",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--provider-volume=C:\\k\\secrets-store-csi-providers",
                                    "--enable-secret-rotation=true",
                                    "--rotation-poll-interval=2m",
                                    "--metrics-addr=:8095",
                                    "--max-call-recv-msg-size=4194304"
                                ],
                                "ports": [
                                    {
                                        "name": "healthz",
                                        "containerPort": 9808,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 8095,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\csi\\\\csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "400m",
                                        "memory": "400Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "plugin-dir",
                                        "mountPath": "C:\\csi"
                                    },
                                    {
                                        "name": "mountpoint-dir",
                                        "mountPath": "C:\\var\\lib\\kubelet\\pods"
                                    },
                                    {
                                        "name": "providers-dir",
                                        "mountPath": "C:\\k\\secrets-store-csi-providers"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "liveness-probe",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1",
                                "args": [
                                    "--csi-address=unix://C:\\csi\\csi.sock",
                                    "--probe-timeout=3s",
                                    "--http-endpoint=0.0.0.0:9808",
                                    "-v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "200Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "plugin-dir",
                                        "mountPath": "C:\\csi"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "aks-secrets-store-csi-driver",
                        "serviceAccount": "aks-secrets-store-csi-driver",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "aks-secrets-store-provider-azure",
                "namespace": "kube-system",
                "uid": "80b85ffc-8a70-4bd3-af83-52b4849bf40f",
                "resourceVersion": "1381",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "secrets-store-provider-azure",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"secrets-store-provider-azure\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"aks-secrets-store-provider-azure\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"secrets-store-provider-azure\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"secrets-store-provider-azure\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"args\":[\"--endpoint=unix:///provider/azure.sock\",\"--log-format-json=false\",\"-v=2\",\"--construct-pem-chain=true\",\"--custom-user-agent='kubernetes.azure.com/managedby: aks'\",\"--healthz-port=8989\",\"--healthz-path=/healthz\",\"--healthz-timeout=5s\",\"--write-cert-and-key-in-separate-files=true\"],\"image\":\"mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":8989},\"initialDelaySeconds\":5,\"periodSeconds\":30,\"timeoutSeconds\":10},\"name\":\"provider-azure-installer\",\"ports\":[{\"containerPort\":8898,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"100Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsUser\":0},\"volumeMounts\":[{\"mountPath\":\"/provider\",\"name\":\"provider-vol\"}]}],\"hostNetwork\":true,\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"aks-secrets-store-provider-azure\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/run/secrets-store-csi-providers\"},\"name\":\"provider-vol\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "secrets-store-provider-azure"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "secrets-store-provider-azure",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "provider-vol",
                                "hostPath": {
                                    "path": "/var/run/secrets-store-csi-providers",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "provider-azure-installer",
                                "image": "mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0",
                                "args": [
                                    "--endpoint=unix:///provider/azure.sock",
                                    "--log-format-json=false",
                                    "-v=2",
                                    "--construct-pem-chain=true",
                                    "--custom-user-agent='kubernetes.azure.com/managedby: aks'",
                                    "--healthz-port=8989",
                                    "--healthz-path=/healthz",
                                    "--healthz-timeout=5s",
                                    "--write-cert-and-key-in-separate-files=true"
                                ],
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "containerPort": 8898,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "100Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "provider-vol",
                                        "mountPath": "/provider"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8989,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 0,
                                    "readOnlyRootFilesystem": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "aks-secrets-store-provider-azure",
                        "serviceAccount": "aks-secrets-store-provider-azure",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "aks-secrets-store-provider-azure-windows",
                "namespace": "kube-system",
                "uid": "235390ab-a9a6-44af-9b10-6ebd86e3829d",
                "resourceVersion": "621",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "secrets-store-provider-azure",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"secrets-store-provider-azure\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"aks-secrets-store-provider-azure-windows\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"secrets-store-provider-azure\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"secrets-store-provider-azure\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"args\":[\"--endpoint=unix://C:\\\\provider\\\\azure.sock\",\"--log-format-json=false\",\"-v=2\",\"--construct-pem-chain=true\",\"--custom-user-agent='kubernetes.azure.com/managedby: aks'\",\"--healthz-port=8989\",\"--healthz-path=/healthz\",\"--healthz-timeout=5s\",\"--write-cert-and-key-in-separate-files=true\"],\"image\":\"mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":8989},\"initialDelaySeconds\":5,\"periodSeconds\":30,\"timeoutSeconds\":10},\"name\":\"provider-azure-installer\",\"ports\":[{\"containerPort\":8898,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"}},\"volumeMounts\":[{\"mountPath\":\"C:\\\\provider\",\"name\":\"provider-vol\"}]}],\"nodeSelector\":{\"kubernetes.io/os\":\"windows\"},\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"aks-secrets-store-provider-azure\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"C:\\\\k\\\\secrets-store-csi-providers\",\"type\":\"DirectoryOrCreate\"},\"name\":\"provider-vol\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "secrets-store-provider-azure"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "secrets-store-provider-azure",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "provider-vol",
                                "hostPath": {
                                    "path": "C:\\k\\secrets-store-csi-providers",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "provider-azure-installer",
                                "image": "mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0",
                                "args": [
                                    "--endpoint=unix://C:\\provider\\azure.sock",
                                    "--log-format-json=false",
                                    "-v=2",
                                    "--construct-pem-chain=true",
                                    "--custom-user-agent='kubernetes.azure.com/managedby: aks'",
                                    "--healthz-port=8989",
                                    "--healthz-path=/healthz",
                                    "--healthz-timeout=5s",
                                    "--write-cert-and-key-in-separate-files=true"
                                ],
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "containerPort": 8898,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "provider-vol",
                                        "mountPath": "C:\\provider"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8989,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "windows"
                        },
                        "serviceAccountName": "aks-secrets-store-provider-azure",
                        "serviceAccount": "aks-secrets-store-provider-azure",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "ama-logs",
                "namespace": "kube-system",
                "uid": "8f4b55c3-de00-4def-9d9a-d41876c9ea14",
                "resourceVersion": "10909",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:17:59Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "component": "ama-logs-agent",
                    "helm.toolkit.fluxcd.io/name": "azure-monitor-logs-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "aks-managed-azure-monitor-logs",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "component": "ama-logs-agent",
                        "tier": "node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "component": "ama-logs-agent",
                            "kubernetes.azure.com/managedby": "aks",
                            "tier": "node"
                        },
                        "annotations": {
                            "WSID": "YTZlMWJhOWUtMmIxYi00NWMxLWJlYmYtMzEzMDZjYzE2ZWMy",
                            "agentVersion": "azure-mdsd-1.35.1",
                            "dockerProviderVersion": "18.0.1-0",
                            "kubernetes.azure.com/no-http-proxy-vars": "true",
                            "schema-versions": "v1"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "host-root",
                                "hostPath": {
                                    "path": "/",
                                    "type": ""
                                }
                            },
                            {
                                "name": "mdsd-prometheus-sock",
                                "emptyDir": {}
                            },
                            {
                                "name": "container-hostname",
                                "hostPath": {
                                    "path": "/etc/hostname",
                                    "type": ""
                                }
                            },
                            {
                                "name": "host-log",
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                }
                            },
                            {
                                "name": "mdsd-sock",
                                "hostPath": {
                                    "path": "/var/run/mdsd-ci",
                                    "type": ""
                                }
                            },
                            {
                                "name": "containerlog-path",
                                "hostPath": {
                                    "path": "/var/lib/docker/containers",
                                    "type": ""
                                }
                            },
                            {
                                "name": "containerlog-path-2",
                                "hostPath": {
                                    "path": "/mnt/docker",
                                    "type": ""
                                }
                            },
                            {
                                "name": "containerlog-path-3",
                                "hostPath": {
                                    "path": "/mnt/containers",
                                    "type": ""
                                }
                            },
                            {
                                "name": "azure-json-path",
                                "hostPath": {
                                    "path": "/etc/kubernetes",
                                    "type": ""
                                }
                            },
                            {
                                "name": "ama-logs-secret",
                                "secret": {
                                    "secretName": "ama-logs-secret",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "settings-vol-config",
                                "configMap": {
                                    "name": "container-azm-ms-agentconfig",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "ama-logs-adx-secret",
                                "secret": {
                                    "secretName": "ama-logs-adx-secret",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "osm-settings-vol-config",
                                "configMap": {
                                    "name": "container-azm-ms-osmconfig",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "addon-token-adapter",
                                "image": "mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1",
                                "command": [
                                    "/addon-token-adapter"
                                ],
                                "args": [
                                    "--secret-namespace=kube-system",
                                    "--secret-name=aad-msi-auth-token",
                                    "--token-server-listening-port=8888",
                                    "--health-server-listening-port=9999",
                                    "--restart-pod-waiting-minutes-on-broken-connection=240"
                                ],
                                "env": [
                                    {
                                        "name": "AZMON_COLLECT_ENV",
                                        "value": "false"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "50Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9999,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "NET_RAW"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "ama-logs",
                                "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27",
                                "ports": [
                                    {
                                        "containerPort": 25225,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 25224,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "syslog",
                                        "hostPort": 28330,
                                        "containerPort": 28330,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_MEMORY_LIMIT_IN_BYTES",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "ama-logs",
                                                "resource": "limits.memory",
                                                "divisor": "0"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOSTNAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "FBIT_SERVICE_FLUSH_INTERVAL",
                                        "value": "15"
                                    },
                                    {
                                        "name": "FBIT_TAIL_BUFFER_CHUNK_SIZE",
                                        "value": "1"
                                    },
                                    {
                                        "name": "FBIT_TAIL_BUFFER_MAX_SIZE",
                                        "value": "1"
                                    },
                                    {
                                        "name": "AKS_CLUSTER_NAME",
                                        "value": "auto-aks"
                                    },
                                    {
                                        "name": "AKS_RESOURCE_ID",
                                        "value": "/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks"
                                    },
                                    {
                                        "name": "AKS_NODE_RESOURCE_GROUP",
                                        "value": "MC_arc-test-kv_auto-aks_westus3"
                                    },
                                    {
                                        "name": "AKS_REGION",
                                        "value": "westus3"
                                    },
                                    {
                                        "name": "CONTROLLER_TYPE",
                                        "value": "DaemonSet"
                                    },
                                    {
                                        "name": "USER_ASSIGNED_IDENTITY_CLIENT_ID"
                                    },
                                    {
                                        "name": "AZMON_CONTAINERLOGS_ONEAGENT_REGIONS",
                                        "value": "koreacentral,norwayeast,eastus2"
                                    },
                                    {
                                        "name": "APPMONITORING_AUTOINSTRUMENTATION_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "APPMONITORING_OPENTELEMETRYLOGS_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "APPMONITORING_OPENTELEMETRYLOGS_PORT",
                                        "value": "28331"
                                    },
                                    {
                                        "name": "PROMETHEUS_METRICS_SCRAPING_DISABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "USING_AAD_MSI_AUTH",
                                        "value": "true"
                                    },
                                    {
                                        "name": "SYSLOG_HOST_PORT",
                                        "value": "28330"
                                    },
                                    {
                                        "name": "AZMON_RETINA_FLOW_LOGS_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AZMON_RESOURCE_OPTIMIZATION_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AZMON_TELEGRAF_LIVENESSPROBE_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CLUSTER_CLOUD_ENVIRONMENT",
                                        "value": "azurepubliccloud"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "75m",
                                        "memory": "325Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "host-root",
                                        "readOnly": true,
                                        "mountPath": "/hostfs",
                                        "mountPropagation": "HostToContainer"
                                    },
                                    {
                                        "name": "host-log",
                                        "mountPath": "/var/log"
                                    },
                                    {
                                        "name": "mdsd-sock",
                                        "mountPath": "/var/run/mdsd-ci"
                                    },
                                    {
                                        "name": "mdsd-prometheus-sock",
                                        "mountPath": "/var/run/mdsd-PrometheusSidecar"
                                    },
                                    {
                                        "name": "containerlog-path",
                                        "readOnly": true,
                                        "mountPath": "/var/lib/docker/containers"
                                    },
                                    {
                                        "name": "containerlog-path-2",
                                        "readOnly": true,
                                        "mountPath": "/mnt/docker"
                                    },
                                    {
                                        "name": "containerlog-path-3",
                                        "readOnly": true,
                                        "mountPath": "/mnt/containers"
                                    },
                                    {
                                        "name": "azure-json-path",
                                        "mountPath": "/etc/kubernetes/host"
                                    },
                                    {
                                        "name": "ama-logs-secret",
                                        "readOnly": true,
                                        "mountPath": "/etc/ama-logs-secret"
                                    },
                                    {
                                        "name": "ama-logs-secret",
                                        "readOnly": true,
                                        "mountPath": "/etc/omsagent-secret"
                                    },
                                    {
                                        "name": "settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings"
                                    },
                                    {
                                        "name": "ama-logs-adx-secret",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings/adx"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/livenessprobe.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 15,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "DAC_OVERRIDE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": true
                                }
                            },
                            {
                                "name": "ama-logs-prometheus",
                                "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27",
                                "env": [
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_MEMORY_LIMIT_IN_BYTES",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "ama-logs-prometheus",
                                                "resource": "limits.memory",
                                                "divisor": "0"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HOSTNAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "AKS_CLUSTER_NAME",
                                        "value": "auto-aks"
                                    },
                                    {
                                        "name": "AKS_RESOURCE_ID",
                                        "value": "/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks"
                                    },
                                    {
                                        "name": "AKS_NODE_RESOURCE_GROUP",
                                        "value": "MC_arc-test-kv_auto-aks_westus3"
                                    },
                                    {
                                        "name": "AKS_REGION",
                                        "value": "westus3"
                                    },
                                    {
                                        "name": "CONTROLLER_TYPE",
                                        "value": "DaemonSet"
                                    },
                                    {
                                        "name": "CONTAINER_TYPE",
                                        "value": "PrometheusSidecar"
                                    },
                                    {
                                        "name": "USER_ASSIGNED_IDENTITY_CLIENT_ID"
                                    },
                                    {
                                        "name": "USING_AAD_MSI_AUTH",
                                        "value": "true"
                                    },
                                    {
                                        "name": "SYSLOG_HOST_PORT",
                                        "value": "28330"
                                    },
                                    {
                                        "name": "AZMON_TELEGRAF_LIVENESSPROBE_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CLUSTER_CLOUD_ENVIRONMENT",
                                        "value": "azurepubliccloud"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "75m",
                                        "memory": "225Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "azure-json-path",
                                        "mountPath": "/etc/kubernetes/host"
                                    },
                                    {
                                        "name": "ama-logs-secret",
                                        "readOnly": true,
                                        "mountPath": "/etc/ama-logs-secret"
                                    },
                                    {
                                        "name": "ama-logs-secret",
                                        "readOnly": true,
                                        "mountPath": "/etc/omsagent-secret"
                                    },
                                    {
                                        "name": "settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings"
                                    },
                                    {
                                        "name": "osm-settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/osm-settings"
                                    },
                                    {
                                        "name": "mdsd-prometheus-sock",
                                        "mountPath": "/var/run/mdsd-PrometheusSidecar"
                                    },
                                    {
                                        "name": "mdsd-sock",
                                        "mountPath": "/var/run/mdsd-ci"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/livenessprobe.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 15,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "DAC_OVERRIDE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "ama-logs",
                        "serviceAccount": "ama-logs",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            },
                            {
                                "operator": "Exists",
                                "effect": "PreferNoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical",
                        "dnsConfig": {
                            "options": [
                                {
                                    "name": "ndots",
                                    "value": "3"
                                }
                            ]
                        }
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "50%",
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "ama-logs-windows",
                "namespace": "kube-system",
                "uid": "01ae1269-8ebf-4bd8-9be2-5e11196b3146",
                "resourceVersion": "8625",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:17:59Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "component": "ama-logs-agent-windows",
                    "helm.toolkit.fluxcd.io/name": "azure-monitor-logs-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks",
                    "tier": "node-win"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "aks-managed-azure-monitor-logs",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "component": "ama-logs-agent-windows",
                        "tier": "node-win"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "component": "ama-logs-agent-windows",
                            "kubernetes.azure.com/managedby": "aks",
                            "tier": "node-win"
                        },
                        "annotations": {
                            "WSID": "YTZlMWJhOWUtMmIxYi00NWMxLWJlYmYtMzEzMDZjYzE2ZWMy",
                            "agentVersion": "46.17.2",
                            "dockerProviderVersion": "18.0.1-0",
                            "kubernetes.azure.com/no-http-proxy-vars": "true",
                            "schema-versions": "v1"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "docker-windows-kuberenetes-container-logs",
                                "hostPath": {
                                    "path": "C:\\var",
                                    "type": ""
                                }
                            },
                            {
                                "name": "azure-json-path",
                                "hostPath": {
                                    "path": "C:\\k",
                                    "type": ""
                                }
                            },
                            {
                                "name": "docker-windows-containers",
                                "hostPath": {
                                    "path": "C:\\ProgramData\\docker\\containers",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "settings-vol-config",
                                "configMap": {
                                    "name": "container-azm-ms-agentconfig",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "ama-logs-secret",
                                "secret": {
                                    "secretName": "ama-logs-secret",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "ama-logs-adx-secret",
                                "secret": {
                                    "secretName": "ama-logs-adx-secret",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "imds-token",
                                "secret": {
                                    "secretName": "aad-msi-auth-token",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "ama-logs-windows",
                                "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod:win-3.1.27",
                                "env": [
                                    {
                                        "name": "FBIT_SERVICE_FLUSH_INTERVAL",
                                        "value": "15"
                                    },
                                    {
                                        "name": "FBIT_TAIL_BUFFER_CHUNK_SIZE",
                                        "value": "1"
                                    },
                                    {
                                        "name": "FBIT_TAIL_BUFFER_MAX_SIZE",
                                        "value": "1"
                                    },
                                    {
                                        "name": "AKS_RESOURCE_ID",
                                        "value": "/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks"
                                    },
                                    {
                                        "name": "AKS_REGION",
                                        "value": "westus3"
                                    },
                                    {
                                        "name": "CONTROLLER_TYPE",
                                        "value": "DaemonSet"
                                    },
                                    {
                                        "name": "USER_ASSIGNED_IDENTITY_CLIENT_ID"
                                    },
                                    {
                                        "name": "HOSTNAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "PODNAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_MEMORY_LIMIT_IN_BYTES",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "ama-logs-windows",
                                                "resource": "limits.memory",
                                                "divisor": "0"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SIDECAR_SCRAPING_ENABLED",
                                        "value": "true"
                                    },
                                    {
                                        "name": "USING_AAD_MSI_AUTH",
                                        "value": "true"
                                    },
                                    {
                                        "name": "APPMONITORING_AUTOINSTRUMENTATION_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "APPMONITORING_OPENTELEMETRYLOGS_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "APPMONITORING_OPENTELEMETRYLOGS_PORT",
                                        "value": "28331"
                                    },
                                    {
                                        "name": "PROMETHEUS_METRICS_SCRAPING_DISABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AZMON_TELEGRAF_LIVENESSPROBE_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AZMON_WINDOWS_FLUENT_BIT_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "CLUSTER_CLOUD_ENVIRONMENT",
                                        "value": "azurepubliccloud"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "700Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "docker-windows-containers",
                                        "readOnly": true,
                                        "mountPath": "C:\\ProgramData\\docker\\containers"
                                    },
                                    {
                                        "name": "docker-windows-kuberenetes-container-logs",
                                        "mountPath": "C:\\var"
                                    },
                                    {
                                        "name": "settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "C:\\etc\\config\\settings"
                                    },
                                    {
                                        "name": "ama-logs-secret",
                                        "readOnly": true,
                                        "mountPath": "C:\\etc\\ama-logs-secret"
                                    },
                                    {
                                        "name": "ama-logs-secret",
                                        "readOnly": true,
                                        "mountPath": "C:\\etc\\omsagent-secret"
                                    },
                                    {
                                        "name": "ama-logs-adx-secret",
                                        "readOnly": true,
                                        "mountPath": "C:\\etc\\config\\adx"
                                    },
                                    {
                                        "name": "azure-json-path",
                                        "readOnly": true,
                                        "mountPath": "C:\\etc\\kubernetes\\host"
                                    },
                                    {
                                        "name": "imds-token",
                                        "readOnly": true,
                                        "mountPath": "C:\\etc\\IMDS-access-token"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "cmd",
                                            "/c",
                                            "C:\\opt\\amalogswindows\\scripts\\cmd\\livenessprobe.exe",
                                            "fluent-bit.exe",
                                            "fluentdwinaks",
                                            "C:\\etc\\amalogswindows\\filesystemwatcher.txt",
                                            "C:\\etc\\amalogswindows\\renewcertificate.txt",
                                            "MonAgentCore.exe"
                                        ]
                                    },
                                    "initialDelaySeconds": 180,
                                    "timeoutSeconds": 15,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "DAC_OVERRIDE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "addon-token-adapter-win",
                                "image": "mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1",
                                "command": [
                                    "addon-token-adapter-win"
                                ],
                                "args": [
                                    "--secret-namespace=kube-system",
                                    "--secret-name=aad-msi-auth-token",
                                    "--token-server-listening-port=8888",
                                    "--health-server-listening-port=9999",
                                    "--restart-pod-waiting-minutes-on-broken-connection=240"
                                ],
                                "env": [
                                    {
                                        "name": "AZMON_COLLECT_ENV",
                                        "value": "false"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "400m",
                                        "memory": "400Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9999,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "NET_RAW"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "ama-logs",
                        "serviceAccount": "ama-logs",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            },
                            {
                                "operator": "Exists",
                                "effect": "PreferNoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical",
                        "dnsConfig": {
                            "options": [
                                {
                                    "name": "ndots",
                                    "value": "3"
                                }
                            ]
                        }
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "50%",
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "ama-metrics-node",
                "namespace": "kube-system",
                "uid": "48fdedaa-5265-4949-ac2b-8a4f5343f568",
                "resourceVersion": "5625",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:17:28Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "component": "ama-metrics",
                    "helm.toolkit.fluxcd.io/name": "azure-monitor-metrics-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "aks-managed-azure-monitor-metrics",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "dsName": "ama-metrics-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "dsName": "ama-metrics-node",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "agentVersion": "0.0.0.1",
                            "schema-versions": "v1"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "settings-vol-config",
                                "configMap": {
                                    "name": "ama-metrics-settings-configmap",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "ama-metrics-tls-secret-volume",
                                "secret": {
                                    "secretName": "ama-metrics-mtls-secret",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "prometheus-config-vol",
                                "configMap": {
                                    "name": "ama-metrics-prometheus-config-node",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "host-log-containers",
                                "hostPath": {
                                    "path": "/var/log/containers",
                                    "type": ""
                                }
                            },
                            {
                                "name": "host-log-pods",
                                "hostPath": {
                                    "path": "/var/log/pods",
                                    "type": ""
                                }
                            },
                            {
                                "name": "anchors-mariner",
                                "hostPath": {
                                    "path": "/etc/pki/ca-trust/source/anchors/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "anchors-ubuntu",
                                "hostPath": {
                                    "path": "/usr/local/share/ca-certificates/",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "prometheus-collector",
                                "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.18.0-main-06-19-2025-4901e151",
                                "env": [
                                    {
                                        "name": "CLUSTER",
                                        "value": "/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks"
                                    },
                                    {
                                        "name": "AKSREGION",
                                        "value": "westus3"
                                    },
                                    {
                                        "name": "MAC",
                                        "value": "true"
                                    },
                                    {
                                        "name": "AZMON_COLLECT_ENV",
                                        "value": "false"
                                    },
                                    {
                                        "name": "customEnvironment",
                                        "value": "azurepubliccloud"
                                    },
                                    {
                                        "name": "OMS_TLD",
                                        "value": "opinsights.azure.com"
                                    },
                                    {
                                        "name": "CONTROLLER_TYPE",
                                        "value": "DaemonSet"
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_CPU_LIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "prometheus-collector",
                                                "resource": "limits.cpu",
                                                "divisor": "1m"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_MEMORY_LIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "prometheus-collector",
                                                "resource": "limits.memory",
                                                "divisor": "1Mi"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_STATE_NAME",
                                        "value": "ama-metrics-ksm"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_NAME"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_TARGETPORT",
                                        "value": "19100"
                                    },
                                    {
                                        "name": "KUBE_STATE_VERSION",
                                        "value": "mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_VERSION"
                                    },
                                    {
                                        "name": "AGENT_VERSION",
                                        "value": "6.18.0-main-06-19-2025-4901e151"
                                    },
                                    {
                                        "name": "MODE",
                                        "value": "advanced"
                                    },
                                    {
                                        "name": "WINMODE",
                                        "value": "advanced"
                                    },
                                    {
                                        "name": "MINIMAL_INGESTION_PROFILE",
                                        "value": "true"
                                    },
                                    {
                                        "name": "APPMONITORING_AUTOINSTRUMENTATION_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "APPMONITORING_OPENTELEMETRYMETRICS_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "APPMONITORING_OPENTELEMETRYMETRICS_PORT",
                                        "value": "28333"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "150Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings"
                                    },
                                    {
                                        "name": "ama-metrics-tls-secret-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/prometheus/certs"
                                    },
                                    {
                                        "name": "prometheus-config-vol",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings/prometheus"
                                    },
                                    {
                                        "name": "host-log-containers",
                                        "readOnly": true,
                                        "mountPath": "/var/log/containers"
                                    },
                                    {
                                        "name": "host-log-pods",
                                        "readOnly": true,
                                        "mountPath": "/var/log/pods"
                                    },
                                    {
                                        "name": "anchors-mariner",
                                        "readOnly": true,
                                        "mountPath": "/anchors/mariner"
                                    },
                                    {
                                        "name": "anchors-ubuntu",
                                        "readOnly": true,
                                        "mountPath": "/anchors/ubuntu"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "DAC_OVERRIDE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false
                                }
                            },
                            {
                                "name": "addon-token-adapter",
                                "image": "mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1",
                                "command": [
                                    "/addon-token-adapter"
                                ],
                                "args": [
                                    "--secret-namespace=kube-system",
                                    "--secret-name=aad-msi-auth-token",
                                    "--token-server-listening-port=7777",
                                    "--health-server-listening-port=9999",
                                    "--restart-pod-waiting-minutes-on-broken-connection=240"
                                ],
                                "env": [
                                    {
                                        "name": "AZMON_COLLECT_ENV",
                                        "value": "false"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "30Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9999,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "NET_RAW"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "ama-metrics-serviceaccount",
                        "serviceAccount": "ama-metrics-serviceaccount",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "50%",
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "ama-metrics-win-node",
                "namespace": "kube-system",
                "uid": "a79fcc7c-8a62-4f4e-8a84-7b78c1290c17",
                "resourceVersion": "4744",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:17:28Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "component": "ama-metrics",
                    "helm.toolkit.fluxcd.io/name": "azure-monitor-metrics-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "aks-managed-azure-monitor-metrics",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "dsName": "ama-metrics-win-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "dsName": "ama-metrics-win-node",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "agentVersion": "0.0.0.1",
                            "schema-versions": "v1"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "settings-vol-config",
                                "configMap": {
                                    "name": "ama-metrics-settings-configmap",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "prometheus-config-vol",
                                "configMap": {
                                    "name": "ama-metrics-prometheus-config-node-windows",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "host-log-containers",
                                "hostPath": {
                                    "path": "/var/log/containers",
                                    "type": ""
                                }
                            },
                            {
                                "name": "host-log-pods",
                                "hostPath": {
                                    "path": "/var/log/pods",
                                    "type": ""
                                }
                            },
                            {
                                "name": "ama-metrics-tls-secret-volume",
                                "secret": {
                                    "secretName": "ama-metrics-mtls-secret",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "prometheus-collector",
                                "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.18.0-main-06-19-2025-4901e151-win",
                                "env": [
                                    {
                                        "name": "CLUSTER",
                                        "value": "/subscriptions/eaef3242-e7b0-4641-810e-5d0fcc149659/resourceGroups/arc-test-kv/providers/Microsoft.ContainerService/managedClusters/auto-aks"
                                    },
                                    {
                                        "name": "AKSREGION",
                                        "value": "westus3"
                                    },
                                    {
                                        "name": "MAC",
                                        "value": "true"
                                    },
                                    {
                                        "name": "AZMON_COLLECT_ENV",
                                        "value": "false"
                                    },
                                    {
                                        "name": "customEnvironment",
                                        "value": "azurepubliccloud"
                                    },
                                    {
                                        "name": "OMS_TLD",
                                        "value": "opinsights.azure.com"
                                    },
                                    {
                                        "name": "CONTROLLER_TYPE",
                                        "value": "DaemonSet"
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_CPU_LIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "prometheus-collector",
                                                "resource": "limits.cpu",
                                                "divisor": "1m"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CONTAINER_MEMORY_LIMIT",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "containerName": "prometheus-collector",
                                                "resource": "limits.memory",
                                                "divisor": "1Mi"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBE_STATE_NAME",
                                        "value": "ama-metrics-ksm"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_NAME"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_TARGETPORT",
                                        "value": "19100"
                                    },
                                    {
                                        "name": "KUBE_STATE_VERSION",
                                        "value": "mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:"
                                    },
                                    {
                                        "name": "NODE_EXPORTER_VERSION"
                                    },
                                    {
                                        "name": "AGENT_VERSION",
                                        "value": "6.18.0-main-06-19-2025-4901e151-win"
                                    },
                                    {
                                        "name": "MODE",
                                        "value": "advanced"
                                    },
                                    {
                                        "name": "WINMODE",
                                        "value": "advanced"
                                    },
                                    {
                                        "name": "MINIMAL_INGESTION_PROFILE",
                                        "value": "true"
                                    },
                                    {
                                        "name": "APPMONITORING_AUTOINSTRUMENTATION_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "APPMONITORING_OPENTELEMETRYMETRICS_ENABLED",
                                        "value": "false"
                                    },
                                    {
                                        "name": "APPMONITORING_OPENTELEMETRYMETRICS_PORT",
                                        "value": "28333"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "1Gi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "settings-vol-config",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings"
                                    },
                                    {
                                        "name": "prometheus-config-vol",
                                        "readOnly": true,
                                        "mountPath": "/etc/config/settings/prometheus"
                                    },
                                    {
                                        "name": "ama-metrics-tls-secret-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/prometheus/certs"
                                    },
                                    {
                                        "name": "host-log-containers",
                                        "readOnly": true,
                                        "mountPath": "/var/log/containers"
                                    },
                                    {
                                        "name": "host-log-pods",
                                        "readOnly": true,
                                        "mountPath": "/var/log/pods"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 300,
                                    "timeoutSeconds": 60,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "DAC_OVERRIDE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false
                                }
                            },
                            {
                                "name": "addon-token-adapter-win",
                                "image": "mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1",
                                "command": [
                                    "addon-token-adapter-win"
                                ],
                                "args": [
                                    "--secret-namespace=kube-system",
                                    "--secret-name=aad-msi-auth-token",
                                    "--token-server-listening-port=7777",
                                    "--health-server-listening-port=9999",
                                    "--restart-pod-waiting-minutes-on-broken-connection=240"
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9999,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "ama-metrics-serviceaccount",
                        "serviceAccount": "ama-metrics-serviceaccount",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "50%",
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "azure-cns",
                "namespace": "kube-system",
                "uid": "2948b33f-aeb2-49d5-af20-b8aa5980bc42",
                "resourceVersion": "1628",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:06Z",
                "labels": {
                    "app": "azure-cns",
                    "app.kubernetes.io/managed-by": "Eno",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "azure-cns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/managed-by": "Eno",
                            "k8s-app": "azure-cns",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true",
                            "kubernetes.azure.com/azure-cns-configmap-checksum": "955cfd11e218d426c5f4d3945441b1a3ecb0b015cae058199d6b89c235bf9898",
                            "prometheus.io/port": "10092"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "azure-endpoints",
                                "hostPath": {
                                    "path": "/var/run/azure-cns/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "log",
                                "hostPath": {
                                    "path": "/var/log/azure-cns",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cns-state",
                                "hostPath": {
                                    "path": "/var/lib/azure-network",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cni-bin",
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "azure-vnet",
                                "hostPath": {
                                    "path": "/var/run/azure-vnet",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cni-lock",
                                "hostPath": {
                                    "path": "/var/lock/azure-vnet",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cni-conflist",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "cns-config",
                                "configMap": {
                                    "name": "cns-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "cni-installer",
                                "image": "mcr.microsoft.com/containernetworking/azure-ipam:v0.3.0",
                                "command": [
                                    "/dropgz"
                                ],
                                "args": [
                                    "deploy",
                                    "--skip-verify",
                                    "azure-ipam",
                                    "-o",
                                    "/opt/cni/bin/azure-ipam"
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin",
                                        "mountPath": "/opt/cni/bin"
                                    },
                                    {
                                        "name": "cni-conflist",
                                        "mountPath": "/etc/cni/net.d"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "containers": [
                            {
                                "name": "cns-container",
                                "image": "mcr.microsoft.com/containernetworking/azure-cns:v1.6.24",
                                "args": [
                                    "-c",
                                    "tcp://$(CNSIpAddress):$(CNSPort)",
                                    "-t",
                                    "$(CNSLogTarget)",
                                    "-o",
                                    "$(CNSLogDir)"
                                ],
                                "ports": [
                                    {
                                        "name": "api",
                                        "containerPort": 10090,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 10092,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "CNSIpAddress",
                                        "value": "127.0.0.1"
                                    },
                                    {
                                        "name": "CNSPort",
                                        "value": "10090"
                                    },
                                    {
                                        "name": "CNSLogTarget",
                                        "value": "stdoutfile"
                                    },
                                    {
                                        "name": "CNSLogDir",
                                        "value": "/var/log"
                                    },
                                    {
                                        "name": "CNS_CONFIGURATION_PATH",
                                        "value": "/etc/azure-cns/cns_config.json"
                                    },
                                    {
                                        "name": "NODENAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_CIDRs",
                                        "value": "10.244.0.0/16"
                                    },
                                    {
                                        "name": "SERVICE_CIDRs",
                                        "value": "10.0.0.0/16"
                                    },
                                    {
                                        "name": "INFRA_VNET_CIDRs",
                                        "value": "10.224.0.0/12"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "40m",
                                        "memory": "250Mi"
                                    },
                                    "requests": {
                                        "cpu": "40m",
                                        "memory": "250Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "log",
                                        "mountPath": "/var/log"
                                    },
                                    {
                                        "name": "cns-state",
                                        "mountPath": "/var/lib/azure-network"
                                    },
                                    {
                                        "name": "azure-endpoints",
                                        "mountPath": "/var/run/azure-cns"
                                    },
                                    {
                                        "name": "cns-config",
                                        "mountPath": "/etc/azure-cns"
                                    },
                                    {
                                        "name": "cni-bin",
                                        "mountPath": "/opt/cni/bin"
                                    },
                                    {
                                        "name": "azure-vnet",
                                        "mountPath": "/var/run/azure-vnet"
                                    },
                                    {
                                        "name": "cni-lock",
                                        "mountPath": "/var/lock/azure-vnet"
                                    },
                                    {
                                        "name": "cni-conflist",
                                        "mountPath": "/etc/cni/net.d"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "metrics",
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "metrics",
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 1,
                                    "successThreshold": 1,
                                    "failureThreshold": 1
                                },
                                "startupProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "metrics",
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 30
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "azure-cns",
                        "serviceAccount": "azure-cns",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "2%",
                        "maxSurge": 0
                    }
                },
                "minReadySeconds": 10,
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "azure-cns-win",
                "namespace": "kube-system",
                "uid": "78681a4c-b5d7-4396-b0d8-7f3d4939d9e1",
                "resourceVersion": "355",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:06Z",
                "labels": {
                    "app": "azure-cns-win",
                    "app.kubernetes.io/managed-by": "Eno",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "azure-cns-win"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/managed-by": "Eno",
                            "k8s-app": "azure-cns-win",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true",
                            "kubernetes.azure.com/azure-cns-configmap-checksum": "d62e8eb58f17ec7efc6ff2226362636b0c8c54157cb5d3522ec9eec5c1c715c3",
                            "prometheus.io/port": "10092"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "log",
                                "hostPath": {
                                    "path": "/k/azurecns",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cns-config",
                                "configMap": {
                                    "name": "cns-win-config",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "azure-vnet",
                                "hostPath": {
                                    "path": "/var/run/azure-vnet",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cni-bin",
                                "hostPath": {
                                    "path": "/k/azurecni/bin",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "cni-installer",
                                "image": "mcr.microsoft.com/containernetworking/azure-cni:v1.6.21",
                                "command": [
                                    "powershell.exe"
                                ],
                                "args": [
                                    "%CONTAINER_SANDBOX_MOUNT_POINT%/dropgz",
                                    "deploy",
                                    "--skip-verify",
                                    "azure-vnet-stateless",
                                    "-o",
                                    "/k/azurecni/bin/azure-vnet.exe"
                                ],
                                "env": [
                                    {
                                        "name": "PATHEXT",
                                        "value": ".EXE;;"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin",
                                        "mountPath": "/k/azurecni/bin/"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "cns-container",
                                "image": "mcr.microsoft.com/containernetworking/azure-cns:v1.6.24",
                                "command": [
                                    "powershell.exe"
                                ],
                                "args": [
                                    ".\\azure-cns.exe",
                                    "-c",
                                    "tcp://$(CNSIpAddress):$(CNSPort)",
                                    "-t",
                                    "$(CNSLogTarget)",
                                    "-o",
                                    "$(CNSLogDir)",
                                    "-storefilepath",
                                    "$(CNSStoreFilePath)",
                                    "-config-path",
                                    "%CONTAINER_SANDBOX_MOUNT_POINT%\\$(CNS_CONFIGURATION_PATH)"
                                ],
                                "workingDir": "$env:CONTAINER_SANDBOX_MOUNT_POINT",
                                "ports": [
                                    {
                                        "name": "api",
                                        "containerPort": 10090,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 10092,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "PATH",
                                        "value": "%CONTAINER_SANDBOX_MOUNT_POINT%\\Windows\\System32\\WindowsPowershell\\v1.0\\"
                                    },
                                    {
                                        "name": "CNSIpAddress",
                                        "value": "127.0.0.1"
                                    },
                                    {
                                        "name": "CNSPort",
                                        "value": "10090"
                                    },
                                    {
                                        "name": "CNSLogTarget",
                                        "value": "stdoutfile"
                                    },
                                    {
                                        "name": "CNSLogDir",
                                        "value": "/k/azurecns"
                                    },
                                    {
                                        "name": "CNSStoreFilePath",
                                        "value": "/k/azurecns/"
                                    },
                                    {
                                        "name": "CNS_CONFIGURATION_PATH",
                                        "value": "/etc/azure-cns/cns_config.json"
                                    },
                                    {
                                        "name": "NODENAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_CIDRs",
                                        "value": "10.244.0.0/16"
                                    },
                                    {
                                        "name": "SERVICE_CIDRs",
                                        "value": "10.0.0.0/16"
                                    },
                                    {
                                        "name": "INFRA_VNET_CIDRs",
                                        "value": "10.224.0.0/12"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "250m",
                                        "memory": "250Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "log",
                                        "mountPath": "/k/azurecns"
                                    },
                                    {
                                        "name": "cns-config",
                                        "mountPath": "/etc/azure-cns"
                                    },
                                    {
                                        "name": "azure-vnet",
                                        "mountPath": "/var/run/azure-vnet"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "metrics",
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "metrics",
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 1,
                                    "successThreshold": 1,
                                    "failureThreshold": 1
                                },
                                "startupProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "metrics",
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 30
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "azure-cns",
                        "serviceAccount": "azure-cns",
                        "hostNetwork": true,
                        "securityContext": {
                            "windowsOptions": {
                                "runAsUserName": "NT AUTHORITY\\SYSTEM",
                                "hostProcess": true
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "2%",
                        "maxSurge": 0
                    }
                },
                "minReadySeconds": 10,
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent",
                "namespace": "kube-system",
                "uid": "1ecb43c4-4345-4719-a602-1d8c9490a96b",
                "resourceVersion": "2993",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:06Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Eno",
                    "component": "azure-ip-masq-agent",
                    "kubernetes.azure.com/managedby": "aks",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "azure-ip-masq-agent",
                        "tier": "node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/managed-by": "Eno",
                            "k8s-app": "azure-ip-masq-agent",
                            "kubernetes.azure.com/managedby": "aks",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "azure-ip-masq-agent-config-volume",
                                "projected": {
                                    "sources": [
                                        {
                                            "configMap": {
                                                "name": "azure-ip-masq-agent-config",
                                                "items": [
                                                    {
                                                        "key": "ip-masq-agent",
                                                        "path": "ip-masq-agent",
                                                        "mode": 444
                                                    }
                                                ],
                                                "optional": true
                                            }
                                        },
                                        {
                                            "configMap": {
                                                "name": "azure-ip-masq-agent-config-reconciled",
                                                "items": [
                                                    {
                                                        "key": "ip-masq-agent-reconciled",
                                                        "path": "ip-masq-agent-reconciled",
                                                        "mode": 444
                                                    }
                                                ],
                                                "optional": true
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "iptableslock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "azure-ip-masq-agent",
                                "image": "mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2",
                                "args": [
                                    "--v=2",
                                    "--resync-interval=60"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "250Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "azure-ip-masq-agent-config-volume",
                                        "mountPath": "/etc/config"
                                    },
                                    {
                                        "name": "iptableslock",
                                        "mountPath": "/run/xtables.lock"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "NET_RAW"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "automountServiceAccountToken": false,
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": 0
                    }
                },
                "minReadySeconds": 60,
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "cilium",
                "namespace": "kube-system",
                "uid": "26be2ac8-1839-4813-8b09-68eeb28912c9",
                "resourceVersion": "2128",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:13:12Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "helm.toolkit.fluxcd.io/name": "cilium-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "k8s-app": "cilium",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "cilium",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "cilium"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "cilium",
                            "kubernetes.azure.com/ebpf-dataplane": "cilium",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cilium.io/cilium-configmap-checksum": "7c5c6a405d82e85d37c51b81a8035e874cc61519678af145b16fe3c42f10520d",
                            "prometheus.io/port": "9962",
                            "prometheus.io/scrape": "true"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "host-etc-systemd",
                                "hostPath": {
                                    "path": "/etc/systemd",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "host-lib-systemd",
                                "hostPath": {
                                    "path": "/lib/systemd",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "host-usr-lib",
                                "hostPath": {
                                    "path": "/usr/lib",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cilium-run",
                                "hostPath": {
                                    "path": "/var/run/cilium",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "bpf-maps",
                                "hostPath": {
                                    "path": "/sys/fs/bpf",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "hostproc",
                                "hostPath": {
                                    "path": "/proc",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "cilium-cgroup",
                                "hostPath": {
                                    "path": "/run/cilium/cgroupv2",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cni-path",
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "etc-cni-netd",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "clustermesh-secrets",
                                "secret": {
                                    "secretName": "cilium-clustermesh",
                                    "defaultMode": 256,
                                    "optional": true
                                }
                            },
                            {
                                "name": "cilium-config-path",
                                "configMap": {
                                    "name": "cilium-config",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "host-proc-sys-net",
                                "hostPath": {
                                    "path": "/proc/sys/net",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "host-proc-sys-kernel",
                                "hostPath": {
                                    "path": "/proc/sys/kernel",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "cilium-netns",
                                "hostPath": {
                                    "path": "/var/run/netns",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "install-cni-binaries",
                                "image": "mcr.microsoft.com/containernetworking/cilium/cilium:v1.17.4-250610",
                                "command": [
                                    "/install-plugin.sh"
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cni-path",
                                        "mountPath": "/host/opt/cni/bin"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "type": "spc_t",
                                        "level": "s0"
                                    }
                                }
                            },
                            {
                                "name": "mount-cgroup",
                                "image": "mcr.microsoft.com/containernetworking/cilium/cilium:v1.17.4-250610",
                                "command": [
                                    "sh",
                                    "-ec",
                                    "cp /usr/bin/cilium-mount /hostbin/cilium-mount;\nnsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cilium-mount\" $CGROUP_ROOT;\nrm /hostbin/cilium-mount\n"
                                ],
                                "env": [
                                    {
                                        "name": "CGROUP_ROOT",
                                        "value": "/run/cilium/cgroupv2"
                                    },
                                    {
                                        "name": "BIN_PATH",
                                        "value": "/opt/cni/bin"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "hostproc",
                                        "mountPath": "/hostproc"
                                    },
                                    {
                                        "name": "cni-path",
                                        "mountPath": "/hostbin"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "SYS_ADMIN",
                                            "SYS_CHROOT",
                                            "SYS_PTRACE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "type": "spc_t",
                                        "level": "s0"
                                    },
                                    "appArmorProfile": {
                                        "type": "Unconfined"
                                    }
                                }
                            },
                            {
                                "name": "apply-sysctl-overwrites",
                                "image": "mcr.microsoft.com/containernetworking/cilium/cilium:v1.17.4-250610",
                                "command": [
                                    "sh",
                                    "-ec",
                                    "cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;\nnsenter --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cilium-sysctlfix\";\nrm /hostbin/cilium-sysctlfix\n"
                                ],
                                "env": [
                                    {
                                        "name": "BIN_PATH",
                                        "value": "/opt/cni/bin"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "hostproc",
                                        "mountPath": "/hostproc"
                                    },
                                    {
                                        "name": "cni-path",
                                        "mountPath": "/hostbin"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "SYS_ADMIN",
                                            "SYS_CHROOT",
                                            "SYS_PTRACE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "type": "spc_t",
                                        "level": "s0"
                                    },
                                    "appArmorProfile": {
                                        "type": "Unconfined"
                                    }
                                }
                            },
                            {
                                "name": "mount-bpf-fs",
                                "image": "mcr.microsoft.com/containernetworking/cilium/cilium:v1.17.4-250610",
                                "command": [
                                    "/bin/bash",
                                    "-c",
                                    "--"
                                ],
                                "args": [
                                    "mount | grep \"/sys/fs/bpf type bpf\" || mount -t bpf bpf /sys/fs/bpf"
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "bpf-maps",
                                        "mountPath": "/sys/fs/bpf",
                                        "mountPropagation": "Bidirectional"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            },
                            {
                                "name": "clean-cilium-state",
                                "image": "mcr.microsoft.com/containernetworking/cilium/cilium:v1.17.4-250610",
                                "command": [
                                    "/init-container.sh"
                                ],
                                "env": [
                                    {
                                        "name": "CILIUM_ALL_STATE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "cilium-config",
                                                "key": "clean-cilium-state",
                                                "optional": true
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_BPF_STATE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "cilium-config",
                                                "key": "clean-cilium-bpf-state",
                                                "optional": true
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "100Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "bpf-maps",
                                        "mountPath": "/sys/fs/bpf"
                                    },
                                    {
                                        "name": "cilium-cgroup",
                                        "mountPath": "/run/cilium/cgroupv2",
                                        "mountPropagation": "HostToContainer"
                                    },
                                    {
                                        "name": "cilium-run",
                                        "mountPath": "/var/run/cilium"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "SYS_MODULE",
                                            "SYS_ADMIN",
                                            "SYS_RESOURCE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "type": "spc_t",
                                        "level": "s0"
                                    },
                                    "appArmorProfile": {
                                        "type": "Unconfined"
                                    }
                                }
                            },
                            {
                                "name": "block-wireserver",
                                "image": "mcr.microsoft.com/containernetworking/cilium/cilium:v1.17.4-250610",
                                "command": [
                                    "/bin/bash",
                                    "-cx",
                                    "installRuleIdempotent() {\n  rule=$1\n  if ! iptables -t mangle -C $rule 2\u003e /dev/null; then\n    echo \"installing iptables rule: $rule\"\n    iptables -t mangle -I $rule || exit 1\n  else\n    echo \"iptables rule already installed: $rule\"\n  fi\n}\ninstallRuleIdempotent \"FORWARD -d 168.63.129.16 -p tcp --dport 80 -j DROP\"\ninstallRuleIdempotent \"FORWARD -d 168.63.129.16 -p tcp --dport 32526 -j DROP\"\n"
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "cilium-agent",
                                "image": "mcr.microsoft.com/containernetworking/cilium/cilium:v1.17.4-250610",
                                "command": [
                                    "cilium-agent"
                                ],
                                "args": [
                                    "--config-dir=/tmp/cilium/config-map"
                                ],
                                "ports": [
                                    {
                                        "name": "prometheus",
                                        "hostPort": 9962,
                                        "containerPort": 9962,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "K8S_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_K8S_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "CILIUM_CLUSTERMESH_CONFIG",
                                        "value": "/var/lib/cilium/clustermesh/"
                                    },
                                    {
                                        "name": "KUBE_CLIENT_BACKOFF_BASE",
                                        "value": "1"
                                    },
                                    {
                                        "name": "KUBE_CLIENT_BACKOFF_DURATION",
                                        "value": "120"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "host-proc-sys-net",
                                        "mountPath": "/host/proc/sys/net"
                                    },
                                    {
                                        "name": "host-proc-sys-kernel",
                                        "mountPath": "/host/proc/sys/kernel"
                                    },
                                    {
                                        "name": "bpf-maps",
                                        "mountPath": "/sys/fs/bpf",
                                        "mountPropagation": "HostToContainer"
                                    },
                                    {
                                        "name": "cilium-run",
                                        "mountPath": "/var/run/cilium"
                                    },
                                    {
                                        "name": "etc-cni-netd",
                                        "mountPath": "/host/etc/cni/net.d"
                                    },
                                    {
                                        "name": "clustermesh-secrets",
                                        "readOnly": true,
                                        "mountPath": "/var/lib/cilium/clustermesh"
                                    },
                                    {
                                        "name": "cilium-config-path",
                                        "readOnly": true,
                                        "mountPath": "/tmp/cilium/config-map"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "cilium-netns",
                                        "mountPath": "/var/run/cilium/netns",
                                        "mountPropagation": "HostToContainer"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9879,
                                        "host": "127.0.0.1",
                                        "scheme": "HTTP",
                                        "httpHeaders": [
                                            {
                                                "name": "brief",
                                                "value": "true"
                                            }
                                        ]
                                    },
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 10
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9879,
                                        "host": "127.0.0.1",
                                        "scheme": "HTTP",
                                        "httpHeaders": [
                                            {
                                                "name": "brief",
                                                "value": "true"
                                            }
                                        ]
                                    },
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "startupProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 9879,
                                        "host": "127.0.0.1",
                                        "scheme": "HTTP",
                                        "httpHeaders": [
                                            {
                                                "name": "brief",
                                                "value": "true"
                                            }
                                        ]
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 2,
                                    "successThreshold": 1,
                                    "failureThreshold": 105
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "CHOWN",
                                            "KILL",
                                            "NET_ADMIN",
                                            "NET_RAW",
                                            "IPC_LOCK",
                                            "SYS_MODULE",
                                            "SYS_ADMIN",
                                            "SYS_RESOURCE",
                                            "DAC_OVERRIDE",
                                            "FOWNER",
                                            "SETGID",
                                            "SETUID"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "seLinuxOptions": {
                                        "type": "spc_t",
                                        "level": "s0"
                                    },
                                    "appArmorProfile": {
                                        "type": "Unconfined"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 1,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "cilium",
                        "serviceAccount": "cilium",
                        "automountServiceAccountToken": true,
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/ebpf-dataplane",
                                                    "operator": "In",
                                                    "values": [
                                                        "cilium"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "5%",
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "cloud-node-manager",
                "namespace": "kube-system",
                "uid": "88fdccef-746b-45a5-81a6-a270834e829f",
                "resourceVersion": "1391",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "cloud-node-manager",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"cloud-node-manager\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"cloud-node-manager\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"cloud-node-manager\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/daemonset-pod\":\"true\"},\"labels\":{\"k8s-app\":\"cloud-node-manager\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"command\":[\"cloud-node-manager\",\"--node-name=$(NODE_NAME)\",\"--enable-deprecated-beta-topology-labels=true\"],\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cloud-node-manager\",\"resources\":{\"limits\":{\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"50Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"cloud-node-manager\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"value\":\"true\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "cloud-node-manager"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "cloud-node-manager",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "cloud-node-manager",
                                "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5",
                                "command": [
                                    "cloud-node-manager",
                                    "--node-name=$(NODE_NAME)",
                                    "--enable-deprecated-beta-topology-labels=true"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "512Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "50Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "cloud-node-manager",
                        "serviceAccount": "cloud-node-manager",
                        "hostNetwork": true,
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal",
                                "value": "true",
                                "effect": "NoSchedule"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "cloud-node-manager-windows",
                "namespace": "kube-system",
                "uid": "8def0002-8280-467b-8d0d-f990f573efb7",
                "resourceVersion": "485",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "cloud-node-manager",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"cloud-node-manager\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"cloud-node-manager-windows\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"cloud-node-manager-windows\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/daemonset-pod\":\"true\"},\"labels\":{\"k8s-app\":\"cloud-node-manager-windows\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"command\":[\"c:\\\\hpc\\\\cloud-node-manager.exe\",\"--node-name=$(NODE_NAME)\"],\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5-windows-hpc\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cloud-node-manager\",\"resources\":{\"limits\":{\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"50Mi\"}}}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"windowsOptions\":{\"hostProcess\":true,\"runAsUserName\":\"NT AUTHORITY\\\\SYSTEM\"}},\"serviceAccountName\":\"cloud-node-manager\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"value\":\"true\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "cloud-node-manager-windows"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "cloud-node-manager-windows",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "cloud-node-manager",
                                "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.32.5-windows-hpc",
                                "command": [
                                    "c:\\hpc\\cloud-node-manager.exe",
                                    "--node-name=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "512Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "50Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "cloud-node-manager",
                        "serviceAccount": "cloud-node-manager",
                        "hostNetwork": true,
                        "securityContext": {
                            "windowsOptions": {
                                "runAsUserName": "NT AUTHORITY\\SYSTEM",
                                "hostProcess": true
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal",
                                "value": "true",
                                "effect": "NoSchedule"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node",
                "namespace": "kube-system",
                "uid": "73aa0c28-f7cf-4508-81d9-492f95d31f6c",
                "resourceVersion": "1427",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azuredisk-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azuredisk-node\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azuredisk-node\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"args\":[\"--csi-address=/csi/csi.sock\",\"--probe-timeout=10s\",\"--health-port=29603\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"liveness-probe\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"}]},{\"args\":[\"--csi-address=$(ADDRESS)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--v=2\"],\"env\":[{\"name\":\"ADDRESS\",\"value\":\"/csi/csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock\"}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/registration\",\"name\":\"registration-dir\"}]},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-perf-optimization=true\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"/etc/kubernetes/azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///csi/csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.7\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":30},\"name\":\"azuredisk\",\"ports\":[{\"containerPort\":29603,\"name\":\"healthz\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"memory\":\"5600Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/var/lib/kubelet/\",\"mountPropagation\":\"Bidirectional\",\"name\":\"mountpoint-dir\"},{\"mountPath\":\"/etc/kubernetes/\",\"name\":\"azure-cred\"},{\"mountPath\":\"/dev\",\"name\":\"device-dir\"},{\"mountPath\":\"/sys/bus/scsi/devices\",\"name\":\"sys-devices-dir\"},{\"mountPath\":\"/sys/class/scsi_host/\",\"name\":\"scsi-host-dir\"}]}],\"dnsPolicy\":\"Default\",\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"csi-azuredisk-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins/disk.csi.azure.com\",\"type\":\"DirectoryOrCreate\"},\"name\":\"socket-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"mountpoint-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins_registry/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"registration-dir\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"azure-cred\"},{\"hostPath\":{\"path\":\"/dev\",\"type\":\"Directory\"},\"name\":\"device-dir\"},{\"hostPath\":{\"path\":\"/sys/bus/scsi/devices\",\"type\":\"Directory\"},\"name\":\"sys-devices-dir\"},{\"hostPath\":{\"path\":\"/sys/class/scsi_host/\",\"type\":\"Directory\"},\"name\":\"scsi-host-dir\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azuredisk-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azuredisk-node",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "socket-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins/disk.csi.azure.com",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "mountpoint-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "registration-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins_registry/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "azure-cred",
                                "hostPath": {
                                    "path": "/etc/kubernetes/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "device-dir",
                                "hostPath": {
                                    "path": "/dev",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "sys-devices-dir",
                                "hostPath": {
                                    "path": "/sys/bus/scsi/devices",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "scsi-host-dir",
                                "hostPath": {
                                    "path": "/sys/class/scsi_host/",
                                    "type": "Directory"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "liveness-probe",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0",
                                "args": [
                                    "--csi-address=/csi/csi.sock",
                                    "--probe-timeout=10s",
                                    "--health-port=29603",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0",
                                "args": [
                                    "--csi-address=$(ADDRESS)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--v=2"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/csi/csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "registration-dir",
                                        "mountPath": "/registration"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "azuredisk",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.7",
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-perf-optimization=true"
                                ],
                                "ports": [
                                    {
                                        "name": "healthz",
                                        "containerPort": 29603,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "/etc/kubernetes/azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix:///csi/csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "5600Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "mountpoint-dir",
                                        "mountPath": "/var/lib/kubelet/",
                                        "mountPropagation": "Bidirectional"
                                    },
                                    {
                                        "name": "azure-cred",
                                        "mountPath": "/etc/kubernetes/"
                                    },
                                    {
                                        "name": "device-dir",
                                        "mountPath": "/dev"
                                    },
                                    {
                                        "name": "sys-devices-dir",
                                        "mountPath": "/sys/bus/scsi/devices"
                                    },
                                    {
                                        "name": "scsi-host-dir",
                                        "mountPath": "/sys/class/scsi_host/"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "csi-azuredisk-node-sa",
                        "serviceAccount": "csi-azuredisk-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-win",
                "namespace": "kube-system",
                "uid": "abf068fd-030f-4282-9e8f-54772c5def40",
                "resourceVersion": "542",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azuredisk-node-win\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azuredisk-node-win\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azuredisk-node-win\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"args\":[\"--v=2\",\"--csi-address=$(CSI_ENDPOINT)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--plugin-registration-path=$(PLUGIN_REG_DIR)\"],\"command\":[\"csi-node-driver-registrar.exe\"],\"env\":[{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\disk.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\disk.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"PLUGIN_REG_DIR\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins_registry\\\\\\\\\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"150Mi\"},\"requests\":{\"cpu\":\"40m\",\"memory\":\"40Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-windows-host-process=true\"],\"command\":[\"azurediskplugin.exe\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"C:\\\\k\\\\azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\disk.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.7-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"azuredisk\",\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"powershell.exe\",\"-c\",\"New-Item -ItemType Directory -Path C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\ -Force\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.7-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"init\",\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"},\"windowsOptions\":{\"hostProcess\":true,\"runAsUserName\":\"NT AUTHORITY\\\\SYSTEM\"}},\"serviceAccountName\":\"csi-azuredisk-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azuredisk-node-win"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azuredisk-node-win",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "initContainers": [
                            {
                                "name": "init",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.7-windows-hp",
                                "command": [
                                    "powershell.exe",
                                    "-c",
                                    "New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\ -Force"
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0",
                                "command": [
                                    "csi-node-driver-registrar.exe"
                                ],
                                "args": [
                                    "--v=2",
                                    "--csi-address=$(CSI_ENDPOINT)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--plugin-registration-path=$(PLUGIN_REG_DIR)"
                                ],
                                "env": [
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "PLUGIN_REG_DIR",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "150Mi"
                                    },
                                    "requests": {
                                        "cpu": "40m",
                                        "memory": "40Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "azuredisk",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.32.7-windows-hp",
                                "command": [
                                    "azurediskplugin.exe"
                                ],
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-windows-host-process=true"
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "C:\\k\\azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "csi-azuredisk-node-sa",
                        "serviceAccount": "csi-azuredisk-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "windowsOptions": {
                                "runAsUserName": "NT AUTHORITY\\SYSTEM",
                                "hostProcess": true
                            },
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "csi-azurefile-node",
                "namespace": "kube-system",
                "uid": "aab5a1cb-5bfe-45e6-8c21-be987084b2df",
                "resourceVersion": "1479",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azurefile-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azurefile-node\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azurefile-node\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"args\":[\"--csi-address=/csi/csi.sock\",\"--probe-timeout=10s\",\"--health-port=29613\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"liveness-probe\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"}]},{\"args\":[\"--csi-address=$(ADDRESS)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--v=2\"],\"env\":[{\"name\":\"ADDRESS\",\"value\":\"/csi/csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock\"}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/registration\",\"name\":\"registration-dir\"}]},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-get-volume-stats=true\",\"--mount-permissions=0777\",\"--metrics-address=0.0.0.0:29615\",\"--enable-kata-cc-mount=true\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"/etc/kubernetes/azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///csi/csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.4\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":30},\"name\":\"azurefile\",\"ports\":[{\"containerPort\":29613,\"name\":\"healthz\",\"protocol\":\"TCP\"},{\"containerPort\":29615,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"memory\":\"400Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]},\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/var/lib/kubelet/\",\"mountPropagation\":\"Bidirectional\",\"name\":\"mountpoint-dir\"},{\"mountPath\":\"/etc/kubernetes/\",\"name\":\"azure-cred\"},{\"mountPath\":\"/dev\",\"name\":\"device-dir\"},{\"mountPath\":\"/run/kata-containers/shared/direct-volumes\",\"name\":\"kata-direct-volumes\"}]}],\"dnsPolicy\":\"Default\",\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"csi-azurefile-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins/file.csi.azure.com\",\"type\":\"DirectoryOrCreate\"},\"name\":\"socket-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"mountpoint-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins_registry/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"registration-dir\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"azure-cred\"},{\"hostPath\":{\"path\":\"/dev\",\"type\":\"Directory\"},\"name\":\"device-dir\"},{\"hostPath\":{\"path\":\"/run/kata-containers/shared/direct-volumes/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"kata-direct-volumes\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azurefile-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azurefile-node",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "socket-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins/file.csi.azure.com",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "mountpoint-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "registration-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins_registry/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "azure-cred",
                                "hostPath": {
                                    "path": "/etc/kubernetes/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "device-dir",
                                "hostPath": {
                                    "path": "/dev",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "kata-direct-volumes",
                                "hostPath": {
                                    "path": "/run/kata-containers/shared/direct-volumes/",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "liveness-probe",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0",
                                "args": [
                                    "--csi-address=/csi/csi.sock",
                                    "--probe-timeout=10s",
                                    "--health-port=29613",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0",
                                "args": [
                                    "--csi-address=$(ADDRESS)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--v=2"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/csi/csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "registration-dir",
                                        "mountPath": "/registration"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "azurefile",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.4",
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-get-volume-stats=true",
                                    "--mount-permissions=0777",
                                    "--metrics-address=0.0.0.0:29615",
                                    "--enable-kata-cc-mount=true"
                                ],
                                "ports": [
                                    {
                                        "name": "healthz",
                                        "containerPort": 29613,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 29615,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "/etc/kubernetes/azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix:///csi/csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "400Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "mountpoint-dir",
                                        "mountPath": "/var/lib/kubelet/",
                                        "mountPropagation": "Bidirectional"
                                    },
                                    {
                                        "name": "azure-cred",
                                        "mountPath": "/etc/kubernetes/"
                                    },
                                    {
                                        "name": "device-dir",
                                        "mountPath": "/dev"
                                    },
                                    {
                                        "name": "kata-direct-volumes",
                                        "mountPath": "/run/kata-containers/shared/direct-volumes"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "csi-azurefile-node-sa",
                        "serviceAccount": "csi-azurefile-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-win",
                "namespace": "kube-system",
                "uid": "5ae8f50c-12c4-44a4-b88c-c648ec93decb",
                "resourceVersion": "552",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azurefile-node-win\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azurefile-node-win\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azurefile-node-win\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"args\":[\"--csi-address=$(CSI_ENDPOINT)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--plugin-registration-path=$(PLUGIN_REG_DIR)\",\"--v=2\"],\"command\":[\"csi-node-driver-registrar.exe\"],\"env\":[{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\file.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\file.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"PLUGIN_REG_DIR\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins_registry\\\\\\\\\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"150Mi\"},\"requests\":{\"cpu\":\"40m\",\"memory\":\"40Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-windows-host-process=true\"],\"command\":[\"azurefileplugin.exe\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"C:\\\\k\\\\azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\file.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.4-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"azurefile\",\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"powershell.exe\",\"-c\",\"New-Item -ItemType Directory -Path C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\ -Force\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.4-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"init\",\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"},\"windowsOptions\":{\"hostProcess\":true,\"runAsUserName\":\"NT AUTHORITY\\\\SYSTEM\"}},\"serviceAccountName\":\"csi-azurefile-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azurefile-node-win"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azurefile-node-win",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "initContainers": [
                            {
                                "name": "init",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.4-windows-hp",
                                "command": [
                                    "powershell.exe",
                                    "-c",
                                    "New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\ -Force"
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0",
                                "command": [
                                    "csi-node-driver-registrar.exe"
                                ],
                                "args": [
                                    "--csi-address=$(CSI_ENDPOINT)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--plugin-registration-path=$(PLUGIN_REG_DIR)",
                                    "--v=2"
                                ],
                                "env": [
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "PLUGIN_REG_DIR",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "150Mi"
                                    },
                                    "requests": {
                                        "cpu": "40m",
                                        "memory": "40Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "azurefile",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.32.4-windows-hp",
                                "command": [
                                    "azurefileplugin.exe"
                                ],
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-windows-host-process=true"
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "C:\\k\\azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "csi-azurefile-node-sa",
                        "serviceAccount": "csi-azurefile-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "windowsOptions": {
                                "runAsUserName": "NT AUTHORITY\\SYSTEM",
                                "hostProcess": true
                            },
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "retina-agent",
                "namespace": "kube-system",
                "uid": "0c626a7f-c8b6-481c-ae1f-da1437f074dd",
                "resourceVersion": "6535",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:17:49Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "helm.toolkit.fluxcd.io/name": "kappie-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "k8s-app": "retina",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "aks-managed-kappie",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "retina"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "retina",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "checksum/config": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "debug",
                                "hostPath": {
                                    "path": "/sys/kernel/debug",
                                    "type": ""
                                }
                            },
                            {
                                "name": "trace",
                                "hostPath": {
                                    "path": "/sys/kernel/tracing",
                                    "type": ""
                                }
                            },
                            {
                                "name": "bpf",
                                "hostPath": {
                                    "path": "/sys/fs/bpf",
                                    "type": ""
                                }
                            },
                            {
                                "name": "cgroup",
                                "hostPath": {
                                    "path": "/sys/fs/cgroup",
                                    "type": ""
                                }
                            },
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config",
                                "configMap": {
                                    "name": "retina-config",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "cilium",
                                "hostPath": {
                                    "path": "/var/run/cilium",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "host-os-release",
                                "hostPath": {
                                    "path": "/etc/os-release",
                                    "type": "FileOrCreate"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "retina-agent-init",
                                "image": "mcr.microsoft.com/containernetworking/retina-init:v0.0.36",
                                "args": [
                                    "--config",
                                    "/retina/config/config.yaml"
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "bpf",
                                        "mountPath": "/sys/fs/bpf",
                                        "mountPropagation": "Bidirectional"
                                    },
                                    {
                                        "name": "cilium",
                                        "mountPath": "/var/run/cilium"
                                    },
                                    {
                                        "name": "config",
                                        "mountPath": "/retina/config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "FallbackToLogsOnError",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "retina",
                                "image": "mcr.microsoft.com/containernetworking/retina-agent:v0.0.36",
                                "command": [
                                    "/retina/controller"
                                ],
                                "args": [
                                    "--health-probe-bind-address=:18081",
                                    "--metrics-bind-address=:18080",
                                    "--config",
                                    "/retina/config/config.yaml"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 10093,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "200Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "debug",
                                        "mountPath": "/sys/kernel/debug"
                                    },
                                    {
                                        "name": "trace",
                                        "mountPath": "/sys/kernel/tracing"
                                    },
                                    {
                                        "name": "bpf",
                                        "mountPath": "/sys/fs/bpf"
                                    },
                                    {
                                        "name": "cgroup",
                                        "mountPath": "/sys/fs/cgroup"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    },
                                    {
                                        "name": "config",
                                        "mountPath": "/retina/config"
                                    },
                                    {
                                        "name": "cilium",
                                        "mountPath": "/var/run/cilium"
                                    },
                                    {
                                        "name": "host-os-release",
                                        "mountPath": "/etc/os-release"
                                    }
                                ],
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/metrics",
                                        "port": 10093,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 45,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "SYS_ADMIN",
                                            "SYS_RESOURCE",
                                            "NET_ADMIN",
                                            "NET_RAW",
                                            "IPC_LOCK"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false,
                                    "runAsUser": 0
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 90,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "retina-agent",
                        "serviceAccount": "retina-agent",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/ebpf-dataplane",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "cilium"
                                                    ]
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "kubernetes.azure.com/ebpf-dataplane",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "cilium"
                                                    ]
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "retina-agent-win",
                "namespace": "kube-system",
                "uid": "a3b47300-a04a-4141-866b-d137ce81c4c4",
                "resourceVersion": "6533",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:17:49Z",
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm",
                    "helm.toolkit.fluxcd.io/name": "kappie-adapter-helmrelease",
                    "helm.toolkit.fluxcd.io/namespace": "68825a6e37cc46000195d01a",
                    "k8s-app": "retina-win",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "meta.helm.sh/release-name": "aks-managed-kappie",
                    "meta.helm.sh/release-namespace": "kube-system"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "retina-win"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "retina-win",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "checksum/config": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "retina-config-win",
                                "configMap": {
                                    "name": "retina-config-win",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "retinawin",
                                "image": "mcr.microsoft.com/containernetworking/retina-agent:v0.0.36",
                                "command": [
                                    "powershell.exe",
                                    "-command",
                                    "$env:CONTAINER_SANDBOX_MOUNT_POINT/controller.exe --config ./retina/config.yaml"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 10093,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "300Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "retina-config-win",
                                        "mountPath": "retina"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "SYS_ADMIN",
                                            "SYS_RESOURCE",
                                            "NET_ADMIN",
                                            "NET_RAW"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "privileged": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "windows"
                        },
                        "serviceAccountName": "retina-agent",
                        "serviceAccount": "retina-agent",
                        "hostNetwork": true,
                        "securityContext": {
                            "windowsOptions": {
                                "runAsUserName": "NT AUTHORITY\\SYSTEM",
                                "hostProcess": true
                            },
                            "runAsNonRoot": false
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "windows-kube-proxy-initializer",
                "namespace": "kube-system",
                "uid": "deb8904f-c63b-4992-b392-26bdab1f66a6",
                "resourceVersion": "661",
                "generation": 1,
                "creationTimestamp": "2025-07-24T16:11:24Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "windows-kube-proxy-initializer",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"windows-kube-proxy-initializer\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"windows-kube-proxy-initializer\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"windows-kube-proxy-initializer\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/daemonset-pod\":\"true\"},\"labels\":{\"k8s-app\":\"windows-kube-proxy-initializer\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"image\":\"mcr.microsoft.com/oss/kubernetes/pause:3.9-hotfix-20230808\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"pause\"}],\"priorityClassName\":\"system-node-critical\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"value\":\"true\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "windows-kube-proxy-initializer"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "windows-kube-proxy-initializer",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "pause",
                                "image": "mcr.microsoft.com/oss/kubernetes/pause:3.9-hotfix-20230808",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal",
                                "value": "true",
                                "effect": "NoSchedule"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        }
    ]
}
